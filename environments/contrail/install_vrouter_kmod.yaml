heat_template_version: newton

# NOTE: You don't need to pass the parameter explicitly from the
# parent template, it can be specified via the parameter_defaults
# in the resource_registry instead, if you want to override the default
# and/or share values with other templates in the tree.
parameters:
  ContrailRepo:
    type: string
    default: ''
  VrouterPhysicalInterface:
    default: 'eth0'
    description: vRouter physical interface
    type: string
  VrouterDpdkPhysicalInterface:
    default: 'eth0'
    description: vRouter physical interface
    type: string
  VrouterTsnPhysicalInterface:
    default: 'eth0'
    description: vRouter physical interface
    type: string
  VlanParentInterface:
    default: ''
    description: Parent interface of vlan interface
    type: string
  VlanDpdkParentInterface:
    default: ''
    description: Parent interface of vlan interface
    type: string
  VlanTsnParentInterface:
    default: ''
    description: Parent interface of vlan interface
    type: string
  BondInterface:
    default: ''
    description: Bond interface name
    type: string
  BondDpdkInterface:
    default: ''
    description: Bond interface name
    type: string
  BondTsnInterface:
    default: ''
    description: Bond interface name
    type: string
  BondInterfaceMembers:
    default: ''
    description: Bond interface members
    type: string
  BondDpdkInterfaceMembers:
    default: ''
    description: Bond interface members
    type: string
  BondTsnInterfaceMembers:
    default: ''
    description: Bond interface members
    type: string
  BondMode:
    default: '4'
    description: Bond Mode
    type: string
  BondDpdkMode:
    default: '4'
    description: Bond Mode
    type: string
  BondTsnMode:
    default: '4'
    description: Bond Mode
    type: string
  BondPolicy:
    default: '1'
    description: Bond Policy
    type: string
  BondDpdkPolicy:
    default: '1'
    description: Bond Policy
    type: string
  BondTsnPolicy:
    default: '1'
    description: Bond Policy
    type: string
  ContrailDpdkHugePages:
    default: '2048'
    description: DPDK hugepages
    type: string
  ContrailDpdkCoremask:
    default: '0xf'
    description: Core pinning for DPDK
    type: string
  ContrailDpdkDriver:
    default: 'uio_pci_generic'
    description: DPDK Nic Driver
    type: string
  ContrailSriovOn:
    description: If SR-IOV is configured
    type: boolean
    default: false
  VrouterGateway:
    default: ''
    description: Gateway for vRouter
    type: string
  HostnameMap:
    default: {}
    description: Mapping of custom hostnames
    type: json

description: >
  This is an example showing how you can do firstboot configuration
  of the nodes via cloud-init.  To enable this, replace the default
  mapping of OS::TripleO::NodeUserData in ../overcloud_resource_registry*

resources:
  userdata:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: vrouter_module_config}

  vrouter_module_config:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/bin/bash
            export LOGFILE=/tmp/contrail_trace_full.txt
            exec > >(tee -a $LOGFILE)
            exec 2>&1
            echo "=================== $(date) ==================="
            set -xv
            phy_int=$phy_int
            phy_dpdk_int=$phy_dpdk_int
            phy_tsn_int=$phy_tsn_int
            bond_int=$bond_int
            bond_dpdk_int=$bond_dpdk_int
            bond_tsn_int=$bond_tsn_int
            bond_int_members=$bond_int_members
            bond_dpdk_int_members=$bond_dpdk_int_members
            bond_tsn_int_members=$bond_tsn_int_members
            bond_mode=$bond_mode
            bond_dpdk_mode=$bond_dpdk_mode
            bond_tsn_mode=$bond_tsn_mode
            bond_policy=$bond_policy
            bond_dpdk_policy=$bond_dpdk_policy
            bond_tsn_policy=$bond_tsn_policy
            vlan_parent=$vlan_parent
            vlan_dpdk_parent=$vlan_dpdk_parent
            vlan_tsn_parent=$vlan_tsn_parent
            contrail_repo=$contrail_repo
            vrouter_gateway=$vrouter_gateway
            dpdk_hugepages=$dpdk_hugepages
            dpdk_coremask=$dpdk_coremask
            dpdk_driver=$dpdk_driver
            sriov_on=$sriov_on
            if [[ ${contrail_repo} ]]; then
              cat <<EOF > /etc/yum.repos.d/contrail.repo
            [Contrail]
            name=Contrail Repo
            baseurl=${contrail_repo}
            enabled=1
            gpgcheck=0
            protect=1
            metadata_expire=30
            EOF
              yum install -y contrail-tripleo-puppet puppet-contrail
              rsync -a /usr/share/contrail-tripleo-puppet/ /usr/share/openstack-puppet/modules/tripleo/
            fi
            mkdir /var/crashes
            chmod -R 755 /var/crashes
            ulimit -c unlimited
            echo "kernel.core_pattern = /var/crashes/core.%e.%p.%h.%t" >> /etc/sysctl.conf
            sysctl -p
            echo $hostname_map > /tmp/hostnamemap
            hname_list=(`cat /tmp/hostnamemap |tr -d ' '|tr -d '{'| tr -d '}' |tr ',' ' '`)
            for rolename in "${hname_list[@]}"
            do
              if [[ `echo $rolename|awk -F":" '{print $2}'` == `hostname -s` ]];then
                role=`echo $rolename|awk -F":" '{print $1}'`
              fi
            done
            if [[ -z $role ]]; then
                role=`hostname`
            fi
            echo $role > /tmp/rolename
            if [[ `echo $role |awk -F"-" '{print $2}'` == "contrailcontroller" || `echo $role |awk -F"-" '{print $2}'` == "contrailanalytics" || `echo $role |awk -F"-" '{print $2}'` == "contrailanalyticsdatabase" ]]; then
              sed -i '/\[main\]/a \ \ \ \ \parser = future' /etc/puppet/puppet.conf
            fi
            if [[ `echo $role |awk -F"-" '{print $2}'` == "contrailanalytics" ]]; then
              yum remove -y python-redis
            fi
            if [[ `cat /tmp/rolename |awk -F"-" '{print $2}'` == "contraildpdk" ]]; then
              echo "vm.nr_hugepages = ${dpdk_hugepages}" >> /etc/sysctl.conf
              echo "vm.max_map_count = 128960" >> /etc/sysctl.conf
              echo "net.ipv4.tcp_keepalive_time = 5" >> /etc/sysctl.conf
              echo "net.ipv4.tcp_keepalive_probes = 5" >> /etc/sysctl.conf
              echo "net.ipv4.tcp_keepalive_intvl = 1" >> /etc/sysctl.conf
              /sbin/sysctl --system
              modprobe uio
              pci_address=`ethtool -i ${phy_dpdk_int} |grep bus-info| awk '{print $2}' |tr -d ' '`
              if [[ ${vlan_dpdk_parent} ]]; then
                 pci_address=`ethtool -i ${vlan_dpdk_parent} |grep bus-info| awk '{print $2}' |tr -d ' '`
              fi
              if [[ ${bond_dpdk_int} ]]; then
                 bond_dpdk_int_member_list=$(echo ${bond_dpdk_int_members} | tr "," "\n")
                 cat <<EOF> /etc/sysconfig/network-scripts/ifcfg-${bond_dpdk_int}
            DEVICE=${bond_dpdk_int}
            BOOTPROTO=none
            ONBOOT=yes
            USERCTL=yes
            NM_CONTROLLED=no
            BONDING_OPTS="mode=${bond_dpdk_mode} xmit_hash_policy=${bond_dpdk_policy}"
            EOF
                 for member in ${bond_dpdk_int_member_list}; do
                   cat <<EOF> /etc/sysconfig/network-scripts/ifcfg-${member}
            DEVICE=${member}
            BOOTPROTO=none
            ONBOOT=yes
            MASTER=${bond_dpdk_int}
            SLAVE=yes
            USERCTL=no
            NM_CONTROLLED=no
            EOF
                   ip link set dev ${member} down
                 done
                 ifup ${bond_dpdk_int}
                 pci_address=0000:00:00.0
              fi
              if [[ ${vlan_dpdk_parent} ]]; then
                  echo ${vlan_dpdk_parent} >> /tmp/vlan_parent
                  vlanId=`echo ${phy_dpdk_int} | awk -F"vlan" '{print $2}'`
                  cat <<EOF> /etc/sysconfig/network-scripts/ifcfg-${phy_dpdk_int}
            DEVICE=${phy_dpdk_int}
            BOOTPROTO=none
            ONBOOT=yes
            USERCTL=yes
            NM_CONTROLLED=no
            VLAN=yes
            PHYSDEV=${vlan_dpdk_parent}
            EOF
                  ifup ${phy_dpdk_int}
              fi
              # save ip and mask before starting services, otherwise they are always emty
              # since dpdk device becomes non-network devices
              def_gw=''
              if [[ `ip route show | grep default | grep ${phy_dpdk_int}` ]]; then
                def_gw=`ip route show | grep default | grep ${phy_dpdk_int} | awk '{print $3}'`
              fi
              ip=`ifconfig ${phy_dpdk_int} | grep 'inet ' | awk '{print $2}'`
              mask=`ifconfig ${phy_dpdk_int} | grep 'inet ' | awk '{print $4}'`
              mac=`ip link sh dev ${phy_dpdk_int} | grep link/ether|awk '{print $2}' | tr -d ' '`
              # install vrouter packages and prepare configs
              if [[ ${contrail_repo} ]]; then
                yum install -y \
                  contrail-vrouter-utils \
                  contrail-vrouter-dpdk \
                  contrail-vrouter-dpdk-init
              fi
              cat <<EOF > /etc/contrail/agent_param
            LOG=/var/log/contrail.log
            CONFIG=/etc/contrail/contrail-vrouter-agent.conf
            prog=/usr/bin/contrail-vrouter-agent
            pname=contrail-vrouter-agent
            LIBDIR=/usr/lib64
            DEVICE=vhost0
            dev=${phy_dpdk_int}
            vgw_subnet_ip=__VGW_SUBNET_IP__
            vgw_intf=__VGW_INTF_LIST__
            LOGFILE=--log-file=/var/log/contrail/vrouter.log
            EOF
              cat <<EOF > /etc/contrail/contrail-vrouter-agent.conf
            [DEFAULT]
            platform=dpdk
            physical_interface_address=$pci_address
            physical_interface_mac=$mac
            physical_uio_driver=${dpdk_driver}
            log_file=/var/log/contrail/contrail-vrouter-agent.log
            log_level=SYS_NOTICE
            log_local=1
            [VIRTUAL-HOST-INTERFACE]
            physical_interface=${phy_dpdk_int}
            name=vhost0
            gateway=${vrouter_gateway}
            [SERVICE-INSTANCE]
            netns_command=/bin/opencontrail-vrouter-netns
            EOF
              echo $pci_address > /etc/contrail/dpdk_pci
              echo $mac > /etc/contrail/dpdk_mac
              sed -i "s#^command=#&/bin/taskset ${dpdk_coremask} #" /etc/contrail/supervisord_vrouter_files/contrail-vrouter-dpdk.ini
              if sestatus | grep -i "Current mode" | grep -q enforcing ; then
                systemctl daemon-reexec
              fi
              ldconfig
              # start contrail services assign mac to vhost0 and up the vhost0 interface
              systemctl start supervisor-vrouter
              sleep 10
              ip link set dev vhost0 address $mac
              ip link set dev vhost0 up
              # assign ip to vhost0
              if [[ -n "$ip" && -n "$mask" ]]; then
                ip address delete $ip/$mask dev ${phy_dpdk_int}
                ip address add $ip/$mask dev vhost0
                if [[ $def_gw ]]; then
                  ip route add default via $def_gw
                fi
              fi
              if [[ ${dpdk_driver} == "vfio-pci" || ${sriov_on} == 'True' ]]; then
                if [[ ${dpdk_driver} == "vfio-pci" ]]; then
                  sed 's/^\(GRUB_CMDLINE_LINUX=".*\)"/\1 $KERNEL_ARGS intel_iommu=on iommu=pt"/g' -i /etc/default/grub ;
                else
                  sed 's/^\(GRUB_CMDLINE_LINUX=".*\)"/\1 $KERNEL_ARGS intel_iommu=on"/g' -i /etc/default/grub ;
                fi
                grub2-mkconfig -o /etc/grub2.cfg
                systemctl enable supervisor-vrouter
                reboot
              fi
            fi
            if [[ `echo $role |awk -F"-" '{print $2}'` == "novacompute" || `echo $role |awk -F"-" '{print $2}'` == "contrailtsn" ]]; then
              if [[ `echo $role |awk -F"-" '{print $2}'` == "contrailtsn" ]]; then
                phy_int=${phy_tsn_int}
                vlan_parent=${vlan_tsn_parent}
                bond_int=${bond_tsn_int}
                bond_mode=${bond_tsn_mode}
                bond_int_members=${bond_tsn_int_members}
                bond_policy=${bond_tsn_policy}
              fi
              if [[ ${contrail_repo} ]]; then
                yum install -y contrail-vrouter-utils
              fi
              function pkt_setup () {
                  for f in /sys/class/net/$1/queues/rx-*
                  do
                      q="$(echo $f | cut -d '-' -f2)"
                      r=$(($q%32))
                      s=$(($q/32))
                      ((mask=1<<$r))
                      str=(`printf "%x" $mask`)
                      if [ $s -gt 0 ]; then
                          for ((i=0; i < $s; i++))
                          do
                              str+=,00000000
                          done
                      fi
                      echo $str > $f/rps_cpus
                  done
                  ifconfig $1 up
              }
              function insert_vrouter() {
                  if [ -f /sys/class/net/pkt1/queues/rx-0/rps_cpus ]; then
                      pkt_setup pkt1
                  fi
                  if [ -f /sys/class/net/pkt2/queues/rx-0/rps_cpus ]; then
                      pkt_setup pkt2
                  fi
                  if [ -f /sys/class/net/pkt3/queues/rx-0/rps_cpus ]; then
                      pkt_setup pkt3
                  fi
                  DEV_MAC=$(cat /sys/class/net/${phy_int}/address)
                  vif --create vhost0 --mac $DEV_MAC
                  vif --add ${phy_int} --mac $DEV_MAC --vrf 0 --vhost-phys --type physical
                  vif --add vhost0 --mac $DEV_MAC --vrf 0 --type vhost --xconnect ${phy_int}
                  ifconfig ${phy_int} up
                  ip link set dev vhost0 up
                  return 0
              }
              if [[ ${contrail_repo} ]]; then
                yumdownloader contrail-vrouter --destdir /tmp
                cd /tmp
                rpm2cpio /tmp/contrail-vrouter*.rpm | cpio -idmv
                full_kernel_name=$(uname -r)
                base_kernel_name=$(expr "$full_kernel_name" : '\(3.10.0-[0-9]*\)')
                base_kernel_name_with_version="${full_kernel_name%.el7.x86_64}"
                base_kernel_name_with_suffix="${full_kernel_name.el7.x86_64}"
                vrouter_module_path="/tmp/lib/modules"
                if [ -d "$vrouter_module_path/$full_kernel_name" ] ; then
                  vrouter_module_path+="/$full_kernel_name"
                elif [ -d "$vrouter_module_path/${base_kernel_name_with_version}" ] ; then
                  vrouter_module_path+="/${base_kernel_name_with_version}"
                elif [ -d "$vrouter_module_path/${base_kernel_name}" ] ; then
                  vrouter_module_path+="/${base_kernel_name}"
                else
                  vrouter_module_path+="/${base_kernel_name_with_suffix}"
                fi
                cp `find $vrouter_module_path -name vrouter.ko |tail -1` /tmp
                insmod /tmp/vrouter.ko
              else
                depmod -a
                modprobe vrouter
              fi
              if [[ ${bond_int} ]]; then
                 bond_int_member_list=$(echo ${bond_int_members} | tr "," "\n")
                 ip link add name ${bond_int} type bond
                 echo ${bond_mode} > /sys/class/net/${bond_int}/bonding/mode
                 echo ${bond_policy} > /sys/class/net/${bond_int}/bonding/xmit_hash_policy
                 ip link set dev ${bond_int} up
                 for member in ${bond_int_member_list}; do
                     ip link set dev ${member} down
                     ip link set dev ${member} master ${bond_int}
                 done
              fi
              if [[ ${vlan_parent} ]]; then
                  vlanId=`echo ${phy_int} | awk -F"vlan" '{print $2}'`
                  ip link add name ${phy_int} link ${vlan_parent} type vlan id ${vlanId}
              fi
              insert_vrouter
              if [[ `ifconfig ${phy_int} |grep "inet "` ]]; then
                def_gw=''
                if [[ `ip route show |grep default|grep ${phy_int}` ]]; then
                  def_gw=`ip route show |grep default|grep ${phy_int}|awk '{print $3}'`
                fi
                ip=`ifconfig ${phy_int} |grep "inet "|awk '{print $2}'`
                mask=`ifconfig ${phy_int} |grep "inet "|awk '{print $4}'`
                ip address delete $ip/$mask dev ${phy_int}
                ip address add $ip/$mask dev vhost0
                if [[ $def_gw ]]; then
                  ip route add default via $def_gw
                fi
              fi
              if [[ ${sriov_on} == 'True' ]]; then
                if ! grep -q 'intel_iommu=on' /etc/default/grub ; then
                  sed 's/^\(GRUB_CMDLINE_LINUX=".*\)"/\1 $KERNEL_ARGS intel_iommu=on"/g' -i /etc/default/grub ;
                  grub2-mkconfig -o /etc/grub2.cfg
                fi
                # reboot doesnot keep vhost0
                # reboot
              fi
            fi
            echo finishing...
            ifconfig
            ip route
          params:
            $phy_int: {get_param: VrouterPhysicalInterface}
            $phy_dpdk_int: {get_param: VrouterDpdkPhysicalInterface}
            $phy_tsn_int: {get_param: VrouterTsnPhysicalInterface}
            $bond_int: {get_param: BondInterface}
            $bond_dpdk_int: {get_param: BondDpdkInterface}
            $bond_tsn_int: {get_param: BondTsnInterface}
            $bond_int_members: {get_param: BondInterfaceMembers}
            $bond_dpdk_int_members: {get_param: BondDpdkInterfaceMembers}
            $bond_tsn_int_members: {get_param: BondTsnInterfaceMembers}
            $bond_mode: {get_param: BondMode}
            $bond_dpdk_mode: {get_param: BondDpdkMode}
            $bond_tsn_mode: {get_param: BondTsnMode}
            $bond_policy: {get_param: BondPolicy}
            $bond_dpdk_policy: {get_param: BondDpdkPolicy}
            $bond_tsn_policy: {get_param: BondTsnPolicy}
            $vlan_parent: {get_param: VlanParentInterface}
            $vlan_dpdk_parent: {get_param: VlanDpdkParentInterface}
            $vlan_tsn_parent: {get_param: VlanTsnParentInterface}
            $contrail_repo: {get_param: ContrailRepo}
            $hostname_map: {get_param: HostnameMap}
            $vrouter_gateway: {get_param: VrouterGateway}
            $dpdk_hugepages: {get_param: ContrailDpdkHugePages}
            $dpdk_coremask: {get_param: ContrailDpdkCoremask}
            $dpdk_driver: {get_param: ContrailDpdkDriver}
            $sriov_on: {get_param: ContrailSriovOn}

outputs:
  # This means get_resource from the parent template will get the userdata, see:
  # http://docs.openstack.org/developer/heat/template_guide/composition.html#making-your-template-resource-more-transparent
  # Note this is new-for-kilo, an alternative is returning a value then using
  # get_attr in the parent template instead.
  OS::stack_id:
    value: {get_resource: userdata}
