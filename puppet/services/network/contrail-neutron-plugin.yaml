heat_template_version: ocata

description: >
  OpenStack Neutron Opencontrail plugin

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ContrailExtensions:
    description: List of OpenContrail extensions to be enabled
    type: comma_delimited_list
    # default: 'ipam:neutron_plugin_contrail.plugins.opencontrail.contrail_plugin_ipam.NeutronPluginContrailIpam,policy:neutron_plugin_contrail.plugins.opencontrail.contrail_plugin_policy.NeutronPluginContrailPolicy,route-table:neutron_plugin_contrail.plugins.opencontrail.contrail_plugin_vpc.NeutronPluginContrailVpc,contrail:None'

resources:
  ContrailBase:
    type: ./contrail-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      ContrailVersion: {get_param: ContrailVersion}

conditions:
  contrail_extensions_unset: {equals : [{get_param: ContrailExtensions}, '']}

outputs:
  role_data:
    description: Role data for the Neutron Opencontrail plugin
    value:
      service_name: contrail_neutron_plugin
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - neutron::api_extensions_path: '/usr/lib/python2.7/site-packages/neutron_plugin_contrail/extensions:/usr/lib/python2.7/site-packages/neutron_lbaas/extensions'
          - if:
            - contrail_version_unset
            - contrail::vrouter::contrail_extensions: {}
            - contrail::vrouter::contrail_extensions: {get_param: ContrailExtensions}
      step_config: |
        include tripleo::network::contrail::neutron_plugin
