---
- name: Configuration to be applied before rebooting the node
  connection: local
  hosts: localhost

  tasks:
    # Kernel Args Configuration
    - name: init init kernel_arg_list
      set_fact:
        kernel_arg_list: []
    - name: init init kernel_arg_list if _KERNEL_ARGS_  defined
      set_fact:
        kernel_arg_list: "{{ _KERNEL_ARGS_.split() }}"
      when: _KERNEL_ARGS_ | default("") != ""
    - name: set kernel args if sriov of vfio-pci dpdk driver
      when: (_CONTRAIL_DPDK_DRIVER_ | default("") == "vfio-pci") or (_CONTRAIL_SRIOV_NUM_VFS_ | default("") != "")
      block:
        - name: set kernel iommu args
          set_fact:
            kernel_arg_list: "{{ kernel_arg_list }} + [ '{{ item }}' ]"
          when: item not in kernel_arg_list
          with_items:
            - 'iommu=pt'
            - 'intel_iommu=on'
    - name: set kernel 1GB hugepage arg
      set_fact:
        kernel_arg_list: "{{ kernel_arg_list }} + [ 'default_hugepagesz=1GB hugepagesz=1G hugepages={{ _CONTRAIL_HUGEPAGES_1GB_ }}' ]"
      when: _CONTRAIL_HUGEPAGES_1GB_ | default("") != ""
    - name: set kernel 2MB hugepage arg
      set_fact:
        kernel_arg_list: "{{ kernel_arg_list }} + [ 'hugepagesz=2M hugepages={{ _CONTRAIL_HUGEPAGES_2MB_ }}' ]"
      when: _CONTRAIL_HUGEPAGES_2MB_ | default("") != ""
    - debug:
        msg: "kernel_arg_list: '{{ kernel_arg_list }}'"
    - name: convert kernel_arg_list to string
      set_fact:
        kernel_arg_list: "{{ kernel_arg_list | join(' ') }}"
    - debug:
        msg: "kernel_arg_list: '{{ kernel_arg_list }}'"
    - block:
        - name: set default grub file
          set_fact:
            default_grub_config: "/etc/default/grub"
        # https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sec-customizing_the_grub_2_configuration_file
        # #25.5.2
        - name: set uefi target grub file
          set_fact:
            uefi_grub_config: "/boot/efi/EFI/redhat/grub.cfg"
        - name: check if EFI config exists
          stat:
            path: "{{ uefi_grub_config }}"
          register: efi_file_rc
        - name: set target grub file for uefi
          set_fact:
            target_grub_config: "{{ uefi_grub_config }}"
          when:
            - efi_file_rc.stat.exists == true
        - name: set target grub file for bios
          set_fact:
            target_grub_config: "/boot/grub2/grub.cfg"
          when:
            - efi_file_rc.stat.exists == false
        - name: Ensure the kernel args ( {{ kernel_arg_list }} ) is present as TRIPLEO_HEAT_TEMPLATE_KERNEL_ARGS
          lineinfile:
            dest: "{{ default_grub_config }}"
            regexp: '^TRIPLEO_HEAT_TEMPLATE_KERNEL_ARGS.*'
            insertafter: '^GRUB_CMDLINE_LINUX.*'
            line: 'TRIPLEO_HEAT_TEMPLATE_KERNEL_ARGS=" {{ kernel_arg_list }} "'
        - name: Add TRIPLEO_HEAT_TEMPLATE_KERNEL_ARGS to the GRUB_CMDLINE_LINUX parameter
          lineinfile:
            dest: "{{ default_grub_config }}"
            line: 'GRUB_CMDLINE_LINUX="${GRUB_CMDLINE_LINUX:+$GRUB_CMDLINE_LINUX }${TRIPLEO_HEAT_TEMPLATE_KERNEL_ARGS}"'
            insertafter: '^TRIPLEO_HEAT_TEMPLATE_KERNEL_ARGS.*'
        - name: Generate grub config file
          command: "grub2-mkconfig -o {{ target_grub_config }}"
      become: true
      when: kernel_arg_list != ""
    - name: create hugepage devs
      file:
        path: "/dev/hugepages{{ item }}"
        state: directory
      with_items:
        - "1G"
        - "2M"
      when: _CONTRAIL_HUGEPAGES_1GB_ != ""
    - name: create fstab entries
      mount:
        path: "/dev/hugepages{{ item }}"
        src: none
        fstype: hugetlbfs
        opts: "pagesize={{ item }}"
        state: present
      with_items:
        - "1G"
        - "2M"
      when: _CONTRAIL_HUGEPAGES_1GB_ != ""
    # Tune-d Configuration
    - block:
        - name: Tune-d Configuration
          lineinfile:
            dest: /etc/tuned/{{ _TUNED_PROFILE_NAME_ }}-variables.conf
            regexp: '^isolated_cores=.*'
            line: 'isolated_cores={{ _TUNED_CORES_ }}'
          when: _TUNED_CORES_ | default("") != ""

        - name: Tune-d profile activation
          shell: tuned-adm profile {{ _TUNED_PROFILE_NAME_ }}
      become: true
      when: _TUNED_PROFILE_NAME_ | default("") != ""
