heat_template_version: queens

description: >
  Agilio containerized Vrouter and VirtIo Forwarder service

parameters:
  AgilioRegistry:
    default: ''
    description: Agilio Registry
    type: string
  AgilioImageTag:
      default: 'latest'
      description: Agilio images tag
      type: string
  DockerAgilioVrouterImageName:
    description: Agilio Vrouter image name
    type: string
    default: "agilio-vrouter"
  DockerAgilioVirtIoForwarderImageName:
    description: Agilio VirtIO Forwarder image name
    type: string
    default: "virtio-forwarder"
  AgilioLogDir:
    description: Agilio log directory
    type: string
    default: "/var/log/containers/agilio"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:
  ContainersCommon:
    type: ../containers-common.yaml

  AgilioVrouterImageNameNormalized:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      ContrailRegistry: {get_param: AgilioRegistry}
      ContrailImageTag: {get_param: AgilioImageTag}
      GenericImageName: {get_param: DockerAgilioVrouterImageName}

  AgilioVirtIoForwarderImageNameNormalized:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      ContrailRegistry: {get_param: AgilioRegistry}
      ContrailImageTag: {get_param: AgilioImageTag}
      GenericImageName: {get_param: DockerAgilioVirtIoForwarderImageName}

  AgilioCommonDockerVolumes:
    type: OS::Heat::Value
    properties:
      value:
        list_concat:
          - {get_attr: [ContainersCommon, volumes]}
          - - /dev:/dev
            - /var/run:/var/run
            - /etc/agilio:/host/etc/agilio
            - list_join:
                - ':'
                - - {get_param: AgilioLogDir}
                  - '/host/var/log/containers'

outputs:
  role_data:
    description: Role data for the Agilio VertIO Forwarder service.
    value:
      service_name: agilio_virtio_forwarder
      config_settings: {}
      docker_config:
        step_1:
          agilio_vrouter:
            image: {get_attr: [AgilioVrouterImageNameNormalized, contrail_image]}
            net: host
            privileged: true
            detach: false
            user: root
            restart: on-failure
            pid: host
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                - - /lib/modules:/lib/modules
                  - /var/lib/firmware/netronome:/var/lib/firmware/netronome
                  - /etc/sysconfig/network-scripts:/etc/sysconfig/network-scripts
                  - /etc/sysconfig/network:/etc/sysconfig/network
                  - /usr/bin/vif:/usr/bin/vif
                  - /:/host
          agilio_virtio_forwarder:
            image: {get_attr: [AgilioVirtIoForwarderImageNameNormalized, contrail_image]}
            net: host
            privileged: true
            detach: true
            user: root
            restart: always
            volumes:
              {get_attr: [AgilioCommonDockerVolumes, value]}

      host_prep_tasks:
        - name: prepare agilio config folder
          file:
            path: "/etc/agilio"
            state: directory
            recurse: yes
        - name: prepare agilio log folder
          file:
            path: {get_param: AgilioLogDir}
            state: directory
            recurse: yes
            setype: "svirt_sandbox_file_t"

      metadata_settings: []

      update_tasks: []
      post_update_tasks: []

      fast_forward_upgrade_tasks: []
      fast_forward_post_upgrade_tasks: []

      upgrade_tasks: []
      post_upgrade_tasks: []
