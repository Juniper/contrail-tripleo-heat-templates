heat_template_version: queens

description: >
  Agilio containerized Vrouter bootstrap tasks

parameters:
  AgilioLogDir:
    description: Agilio log directory
    type: string
    default: "/var/log/containers/agilio"

resources:
  userdata:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: AgilioVrouterConfig}

  AgilioVrouterConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/bin/bash
            export LOG_DIR="$log_dir"
            export LOGFILE=$LOG_DIR/agilio-vrouter-init.log
            mkdir -p "$LOG_DIR"
            exec > >(tee -a $LOGFILE)
            exec 2>&1
            echo "=================== $(date) ==================="
            set -xv
            set -o pipefail -e
            rule_file=/etc/udev/rules.d/90-agilio-nfp.rules
            rm -fr ${rule_file}
            for module_path in /sys/class/net/*/device/driver/module; do
              module=$(basename $(readlink ${module_path}))
              if [[ "${module}" = "nfp" ]] ; then
                  dev=$(echo ${module_path} | cut -d "/" -f 5)
                  port_name=$(cat /sys/class/net/${dev}/phys_port_name)
                  mac=$(cat /sys/class/net/${dev}/address)
                  echo "ACTION==\"add\", SUBSYSTEM==\"net\", ATTR{address}==\"${mac}\", NAME=\"nfp_${port_name}\"" >> ${rule_file}
              fi
            done
            udevadm control --reload
            udevadm trigger
            dracut -f

          params:
            $log_dir: {get_param: AgilioLogDir}

outputs:
  OS::stack_id:
    value: {get_resource: userdata}
