# contrail base
# config api
# config db
# contrail analitycs
# analytics snmp
# analytics query engine
# analytics kafka
# analytics database
# analytics alarm
# web ui

heat_template_version: queens

description: >
  Contrail Issu

parameters:

  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json

  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json

  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json

  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string

  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

  DockerContrailConfigApiImageName:
    description: image
    type: string
    default: "contrail-controller-config-api"

  DockerContrailConfigSchemaImageName:
    description: image
    type: string
    default: "contrail-controller-config-schema"

  DockerContrailConfigSvcmonitorImageName:
    description: image
    type: string
    default: "contrail-controller-config-svcmonitor"

  DockerContrailConfigDevicemgrImageName:
    description: image
    type: string
    default: "contrail-controller-config-devicemgr"
  # internal params

  contrail_nodes_param_suffux:
    type: string
    default: "node_ips"
    description: suffix for reading hiera data, node_ips or node_names

  ContrailConfigDBMinDiskGB:
    description:  The min size for Contrail Config DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''

  DockerContrailCassandraImageName:
    description: image
    type: string
    default: "contrail-external-cassandra"

  DockerContrailZookeeperImageName:
    description: image
    type: string
    default: "contrail-external-zookeeper"

  DockerContrailRabbitmqImageName:
    description: image
    type: string
    default: "contrail-external-rabbitmq"

  DockerContrailRabbitmqLogPath:
    description: Path where rabbitmq logs will be stored. If set to
                 empty value, container default will be used, which
                 is usually set to '-', resulting in logs going to
                 stdout
    type: string
    default: "/var/log/contrail"

  DockerContrailConfigDatabaseVolume:
    default: 'config_cassandra'
    description: Docker volume for contrail config DB service
    type: string

  DockerContrailConfigZookeeperVolume:
    default: 'config_zookeeper'
    description: Docker volume for contrail config zookeeper service
    type: string

  ContrailRegistry:
    default: 'opencontrailnightly'
    description: Contrail Registry
    type: string

  ContrailIssuImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string

  DockerContrailAnalyticsApiImageName:
    description: image
    type: string
    default: "contrail-analytics-api"

  DockerContrailAnalyticsCollectorImageName:
    description: image
    type: string
    default: "contrail-analytics-collector"

  # Use own name for topology as it's default value is already
  # tied to old 5.0 image name in case of ISSU from 5.0
  DockerContrailAnalyticsTopologyImageNameUpgrade:
    description: image
    type: string
    default: "contrail-analytics-snmp-topology"

  DockerContrailAnalyticsTopologyImageName_5_0:
    description:  5.0 compatibility image name.
    type: string
    default: "contrail-analytics-topology"

  DockerContrailAnalyticsSnmpCollectorImageName:
    description: image
    type: string
    default: "contrail-analytics-snmp-collector"

  DockerContrailAnalyticsQueryEngineImageName:
    description: image
    type: string
    default: "contrail-analytics-query-engine"

  DockerContrailKafkaImageName:
    description: image
    type: string
    default: "contrail-external-kafka"

  ContrailAnalyticsDBMinDiskGB:
    description:  The min size for Contrail Analytics DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''

  ContrailAnalyticsDBPath:
    description:  The path to cassandra database directory. Default
                  will be /var/lib/docker/volumes/analytics_cassandra_data/_data.
    type: string
    default: 'analytics_cassandra_data'

  ContrailAnalyticsCommitlogPath:
    description:  The path to cassandra commitlog directory. Default
                  will be /var/lib/docker/volumes/analytics_cassandra_commitlog/_data.
    type: string
    default: 'analytics_cassandra_commitlog'

  DockerContrailAnalyticsAlarmGenImageName:
    description: image
    type: string
    default: "contrail-analytics-alarm-gen"

  DockerContrailWebuiWebImageName:
    description: image
    type: string
    default: "contrail-controller-webui-web"

  DockerContrailWebuiJobImageName:
    description: image
    type: string
    default: "contrail-controller-webui-job"

  DockerContrailRedisImageName:
    description: image
    type: string
    default: "contrail-external-redis"

  DockerContrailStunnelImageName:
    description: image
    type: string
    default: "contrail-external-stunnel"

  DockerContrailNodemgrImageName:
    description: image
    type: string
    default: "contrail-nodemgr"

  DockerContrailProvisionerImageName:
    description: image
    type: string
    default: "contrail-provisioner"

  ContrailCA:
    default: ''
    description: Contrail CA, could be local or IPA
    type: string

  ContrailServiceCertFile:
    description: Path to the node's public certificate
    type: string
    default: ''

  ContrailServiceKeyFile:
    description: Path to server's/node's private key
    type: string
    default: ''

  ContrailSslEnabled:
    description:  Flag to identify is SSL should be used in internal Contrail
                  services communications (sandesh, introspect, xmpp, redis ..).
    type: boolean
    default: false

  AdminTenantName:
    description: Keystone admin tenant name
    type: string
    default: 'admin'

conditions:
  contrail_configdb_min_disk_gb_unset: {equals : [{get_param: ContrailConfigDBMinDiskGB}, '']}

  rabbitmq_log_keep_default: {equals : [{get_param: DockerContrailRabbitmqLogPath}, '']}

  contrail_analyticsdb_min_disk_gb_unset: {equals : [{get_param: ContrailAnalyticsDBMinDiskGB}, '']}

  is_not_5_0_issu:
    not:
      yaql:
        expression: $.data.split(":")[-1].matches("5\.0")
        data: {get_param: ContrailIssuImageTag}
  is_more_than_2001_or_latest:
    or:
      - yaql:
          expression: $.data.matches(".*latest.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.matches(".*master.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.split(".").select($.split("-")).flatten().where($.matches("^[0-9]+$")).where(int($) >= 2001).any()
          data: {get_param: ContrailIssuImageTag}

  contrail_tls_enabled: {equals: [{get_param: ContrailSslEnabled}, true]}

  contrail_redis_ssl_enabled:
    and:
      - is_not_5_0_issu
      - contrail_tls_enabled

resources:

  DockerContrailConfigApiImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailConfigApiImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailConfigSchemaImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailConfigSchemaImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailConfigSvcmonitorigImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailConfigSvcmonitorImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailConfigDevicemgrImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailConfigDevicemgrImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailCassandraImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailCassandraImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailZookeeperImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailZookeeperImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailRabbitmqImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailRabbitmqImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}


  DockerContrailAnalyticsApiImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsApiImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailAnalyticsCollectorImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsCollectorImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailAnalyticsTopologyImageNormalizeIssu:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      ContrailImageTag: {get_param: ContrailIssuImageTag}
      ContrailRegistry: {get_param: ContrailRegistry}
      GenericImageName:
        if:
          - is_not_5_0_issu
          - {get_param: DockerContrailAnalyticsTopologyImageNameUpgrade}
          - {get_param: DockerContrailAnalyticsTopologyImageName_5_0}

  DockerContrailAnalyticsSnmpCollectorImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsSnmpCollectorImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailAnalyticsQueryEngineImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsQueryEngineImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailKafkaImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailKafkaImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailAnalyticsAlarmGenImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsAlarmGenImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailWebuiWebImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailWebuiWebImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailWebuiJobImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailWebuiJobImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailRedisImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailRedisImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailStunnelImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailStunnelImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailNodemgrImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailNodemgrImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  DockerContrailProvisionerImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailProvisionerImageName}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  ContrailRedis:
    type: contrail-redis.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      env_file_name: '/etc/contrail/issu_config.env'
      ContrailImageTag: {get_param: ContrailIssuImageTag}
      contrail_stunnel_support: true

  ContrailQueryEngine:
    type: contrail-analytics-query-engine.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

  ContrailAnalyticsKafka:
    type: contrail-analytics-kafka.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      ContrailImageTag: {get_param: ContrailIssuImageTag}

outputs:
  role_data:
    description: Role Contrail Controller Issu
    value:
      service_name: contrail_issu
      contrail_issu_api_port: &contrail_issu_api_port 28082
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - contrail::issu_api_port: *contrail_issu_api_port
            tripleo.contrail_issu.firewall_rules:
              '113 contrail_issu_udp':
                dport:
                  - 53
                  - 8092
                proto: 'udp'
              '118 contrail_issu_config':
                dport:
                  - *contrail_issu_api_port
                  - 8082
                  - 8084
                  - 8087
                  - 8088
                  - 8096
                  - 8100
                  - 8101
              '118 contrail_issu_database':
                dport:
                  - 2181
                  - '2888-3888'
                  - 4369
                  - 5673
                  - 7012
                  - 7013
                  - 7201
                  - 8112
                  - 9041
                  - 9161
                  - 25673
              '118 contrail_issu_database':
                dport:
                  # collector structured syslog
                  - 3514
                  # op server
                  - 8081
                  # collector
                  - 8086
                  # http collector
                  - 8089
                  # http op server
                  - 8090
                  # op server admin
                  - 8181
                  # analytics nodemgr
                  - 8104
              '118 contrail_issu_redis':
                dport:
                  get_attr: [ContrailRedis, role_data, contrail_redis_ports]
              '118 contrail_issu_query_engine':
                dport:
                  get_attr: [ContrailQueryEngine, role_data, analytics_query_engine_ports]
              '118 contrail_issu_kafka':
                dport:
                  get_attr: [ContrailAnalyticsKafka, role_data, contrail_analytics_kafka_ports]
              '118 contrail_issu_snmp':
                dport:
                  # snmp collector
                  - 5920
                  # topology
                  - 5921
                  # analytics snmp nodemgr
                  - 8114
              '118 contrail_issu_analyticsdb':
                dport:
                  # cassandra
                  - 7010
                  - 7011
                  - 7200
                  # database nodemgr
                  - 8103
                  # cassandra
                  - 9042
                  - 9160
              '118 contrail_issu_alarm':
                dport:
                  # alarm
                  - 5995
                  # alarm nodemgr
                  - 8113
              '118 contrail_issu_webui':
                dport:
                  - 3000
                  - 3002
                  - 8143
                  - 8180

      service_config_settings:
        map_merge:
          - {get_attr: [ContrailBase, role_data, service_config_settings]}
          - haproxy:
              tripleo.contrail_issu.haproxy_endpoints:
                contrail_issu:
                  map_merge:
                    - public_ssl_port: 38082
                      internal_ip:
                        str_replace:
                          template: "%{hiera('NETWORK_virtual_ip')}"
                          params:
                            NETWORK: {get_param: [ServiceNetMap, ContrailIssuNetwork]}
                      service_port: *contrail_issu_api_port
                      service_network: {get_param: [ServiceNetMap, ContrailIssuNetwork]}
                    - {get_attr: [ContrailBase, role_data, haproxy_config_settings_api]}

      contrail_issu_env_file: &contrail_issu_env_file
        "/etc/contrail/issu_config.env"
      contrail_issu_configdb_env_file: &contrail_issu_configdb_env_file
        "/etc/contrail/issu_configdb.env"
      contrail_issu_analyticsdb_env_file: &contrail_issu_analyticsdb_env_file
        "/etc/contrail/issu_analyticsdb.env"

      contrail_nodemgr_image_name: &contrail_nodemgr_image_name
        get_attr: [DockerContrailNodemgrImageNormalize, contrail_image]

      contrail_provisioner_image_name: &contrail_provisioner_image_name
        get_attr: [DockerContrailProvisionerImageNormalize, contrail_image]

      contrail_common_base_env: &contrail_common_base_env
        {get_attr: [ContrailBase, role_data, contrail_common_base_env]}

      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]

        step_3:
          contrail_config_rabbitmq:
            image: &contrail_config_rabbitmq_image {get_attr: [DockerContrailRabbitmqImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              list_concat:
                - get_attr: [ContrailBase, role_data, contrail_base_env]
                - - 'NODE_TYPE=config-database'
                - if:
                  - rabbitmq_log_keep_default
                  - []
                  - - list_join:
                      - '='
                      - - 'RABBITMQ_LOGS'
                        - list_join:
                          - '/'
                          - - {get_param: DockerContrailRabbitmqLogPath}
                            - 'rabbitmq.log'
                    - list_join:
                      - '='
                      - - 'RABBITMQ_SASL_LOGS'
                        - list_join:
                          - '/'
                          - - {get_param: DockerContrailRabbitmqLogPath}
                            - 'rabbitmq_sasl.log'
            env_file:  *contrail_issu_env_file
          contrail_config_zookeeper:
            image: &contrail_config_zookeeper_image {get_attr: [DockerContrailZookeeperImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - list_join:
                      - ':'
                      - - {get_param: DockerContrailConfigZookeeperVolume}
                        - '/data'
            environment:
              list_concat:
                - get_attr: [ContrailBase, role_data, contrail_base_env]
                - - 'NODE_TYPE=config-database'
            env_file: *contrail_issu_env_file
        step_4:
          map_merge:
            - if:
                - is_more_than_2001_or_latest
                - contrail_config_database_provisioner:
                    image: *contrail_provisioner_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                        - {get_attr: [ContrailBase, role_data, contrail_defaults_env]}
                    env_file:
                      - *contrail_issu_env_file
                      - *contrail_issu_configdb_env_file
                - null
            - contrail_config_database_nodemgr:
                image: *contrail_nodemgr_image_name
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                    - if:
                      - contrail_configdb_min_disk_gb_unset
                      - []
                      - - list_join:
                          - ''
                          - - 'CONFIG_DATABASE_NODEMGR__DEFAULTS__minimum_diskGB='
                            - {get_param: ContrailConfigDBMinDiskGB}
                env_file:
                  - *contrail_issu_env_file
                  - *contrail_issu_configdb_env_file
              contrail_config_database:
                image: &contrail_config_database_image {get_attr: [DockerContrailCassandraImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - list_join:
                          - ':'
                          - - {get_param: DockerContrailConfigDatabaseVolume}
                            - '/var/lib/cassandra'
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  - *contrail_issu_env_file
                  - *contrail_issu_configdb_env_file
              contrail_redis:
                image: &contrail_redis_image_name {get_attr: [DockerContrailRedisImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_analytics_kafka:
                image: &contrail_analytics_kafka_image {get_attr: [DockerContrailKafkaImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - if:
                      - is_not_5_0_issu
                      - - 'NODE_TYPE=analytics-alarm'
                      - - 'NODE_TYPE=database'
                env_file: *contrail_issu_env_file
              contrail_analytics_database:
                image: &contrail_analytics_database_image {get_attr: [DockerContrailCassandraImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - list_join:
                          - ':'
                          - - {get_param: ContrailAnalyticsDBPath}
                            - '/var/lib/cassandra/data'
                      - list_join:
                          - ':'
                          - - {get_param: ContrailAnalyticsCommitlogPath}
                            - '/var/lib/cassandra/commitlog'
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  - *contrail_issu_env_file
                  - *contrail_issu_analyticsdb_env_file
            - if:
                - contrail_redis_ssl_enabled
                - contrail_stunnel:
                    image: &contrail_stunnel_image_name {get_attr: [DockerContrailStunnelImageNormalize, contrail_image]}
                    net: host
                    privileged: false
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      get_attr: [ContrailBase, role_data, contrail_base_env]
                    env_file: *contrail_issu_env_file
                - null

        step_5:
          map_merge:
            - if:
                - is_more_than_2001_or_latest
                - contrail_config_provisioner:
                    image: *contrail_provisioner_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - get_attr: [ContrailBase, role_data, contrail_base_env]
                        - get_attr: [ContrailBase, role_data, contrail_defaults_env]
                        - - 'NODE_TYPE=config'
                    env_file: *contrail_issu_env_file
                  contrail_analytics_provisioner:
                    image: *contrail_provisioner_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - get_attr: [ContrailBase, role_data, contrail_base_env]
                        - get_attr: [ContrailBase, role_data, contrail_defaults_env]
                        - - 'NODE_TYPE=analytics'
                    env_file: *contrail_issu_env_file
                  contrail_analytics_database_provisioner:
                    image: *contrail_provisioner_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                        - - /var/run/docker.sock:/var/run/docker.sock
                    environment:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                        - {get_attr: [ContrailBase, role_data, contrail_defaults_env]}
                        - if:
                          - contrail_analyticsdb_min_disk_gb_unset
                          - []
                          - - list_join:
                              - ''
                              - - 'DATABASE_NODEMGR__DEFAULTS__minimum_diskGB='
                                - {get_param: ContrailAnalyticsDBMinDiskGB}
                    env_file:
                      - *contrail_issu_env_file
                      - *contrail_issu_analyticsdb_env_file
                  contrail_analytics_snmp_provisioner:
                    image: *contrail_provisioner_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - get_attr: [ContrailBase, role_data, contrail_base_env]
                        - get_attr: [ContrailBase, role_data, contrail_defaults_env]
                        - - 'NODE_TYPE=analytics-snmp'
                    env_file: *contrail_issu_env_file
                  contrail_analytics_alarm_provisioner:
                    image: *contrail_provisioner_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - get_attr: [ContrailBase, role_data, contrail_base_env]
                        - get_attr: [ContrailBase, role_data, contrail_defaults_env]
                        - - 'NODE_TYPE=analytics-alarm'
                    env_file: *contrail_issu_env_file
                - null
            - contrail_config_nodemgr:
                image: *contrail_nodemgr_image_name
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - - 'NODE_TYPE=config'
                env_file: *contrail_issu_env_file
              contrail_config_api:
                image: &contrail_config_api_image {get_attr: [DockerContrailConfigApiImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_config_schema:
                image: &contrail_config_schema_image {get_attr: [DockerContrailConfigSchemaImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_config_svc_monitor:
                image: &contrail_config_svc_monitor_image {get_attr: [DockerContrailConfigSvcmonitorigImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_config_device_manager:
                image: &contrail_config_device_manager_image {get_attr: [DockerContrailConfigDevicemgrImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_analytics_nodemgr:
                image: *contrail_nodemgr_image_name
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - - 'NODE_TYPE=analytics'
                env_file: *contrail_issu_env_file
              contrail_analytics_api:
                image: &contrail_analytics_api_image {get_attr: [DockerContrailAnalyticsApiImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                restart: always
                user: root
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_analytics_collector:
                image: &contrail_analytics_collector_image {get_attr: [DockerContrailAnalyticsCollectorImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file: *contrail_issu_env_file
              contrail_analytics_topology:
                image: &contrail_analytics_topology_image {get_attr: [DockerContrailAnalyticsTopologyImageNormalizeIssu, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - if:
                      - is_not_5_0_issu
                      - - 'NODE_TYPE=analytics-snmp'
                      - - 'NODE_TYPE=analytics'
                env_file: *contrail_issu_env_file
              contrail_analytics_snmp_collector:
                image: &contrail_analytics_snmp_collector_image {get_attr: [DockerContrailAnalyticsSnmpCollectorImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - if:
                      - is_not_5_0_issu
                      - - 'NODE_TYPE=analytics-snmp'
                      - - 'NODE_TYPE=analytics'
                env_file: *contrail_issu_env_file
              contrail_analytics_queryengine:
                image: &contrail_analytics_queryengine_image {get_attr: [DockerContrailAnalyticsQueryEngineImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - if:
                      - is_not_5_0_issu
                      - - 'NODE_TYPE=database'
                      - - 'NODE_TYPE=analytics'
                env_file: *contrail_issu_env_file
              contrail_analytics_database_nodemgr:
                image: *contrail_nodemgr_image_name
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                    - if:
                      - contrail_analyticsdb_min_disk_gb_unset
                      - []
                      - - list_join:
                          - ''
                          - - 'DATABASE_NODEMGR__DEFAULTS__minimum_diskGB='
                            - {get_param: ContrailAnalyticsDBMinDiskGB}
                env_file:
                  - *contrail_issu_env_file
                  - *contrail_issu_analyticsdb_env_file
              contrail_analytics_alarmgen:
                image: &contrail_analytics_alarmgen_image {get_attr: [DockerContrailAnalyticsAlarmGenImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  list_concat:
                    - get_attr: [ContrailBase, role_data, contrail_base_env]
                    - if:
                      - is_not_5_0_issu
                      - - 'NODE_TYPE=analytics-alarm'
                      - - 'NODE_TYPE=database'
                env_file: *contrail_issu_env_file
              contrail_webui_web:
                image: &contrail_webui_web_image {get_attr: [DockerContrailWebuiWebImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_auth_internal_env]
                env_file: *contrail_issu_env_file
              contrail_webui_job:
                image: &contrail_webui_job_image {get_attr: [DockerContrailWebuiJobImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_auth_internal_env]
                env_file: *contrail_issu_env_file
            - if:
                - is_not_5_0_issu
                - contrail_analytics_snmp_nodemgr:
                    image: *contrail_nodemgr_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                        - - /var/run/docker.sock:/var/run/docker.sock
                    environment:
                      list_concat:
                        - get_attr: [ContrailBase, role_data, contrail_base_env]
                        - - 'NODE_TYPE=analytics-snmp'
                    env_file: *contrail_issu_env_file
                  contrail_analytics_alarm_nodemgr:
                    image: *contrail_nodemgr_image_name
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                        - - /var/run/docker.sock:/var/run/docker.sock
                    environment:
                      list_concat:
                        - get_attr: [ContrailBase, role_data, contrail_base_env]
                        - - 'NODE_TYPE=analytics-alarm'
                    env_file: *contrail_issu_env_file
                - null

      get_nova_api_network_cmd: &get_nova_api_network_cmd
        str_replace:
          template: "hiera -c /etc/puppet/hiera.yaml cloud_name_$NETWORK"
          params:
            $NETWORK: {get_param: [ServiceNetMap, NovaApiNetwork]}

      host_prep_tasks:
        - name: create contrail containers common directories
          file:
            path: "{{ item }}"
            state: directory
            recurse: yes
          with_items:
            - /var/log/containers/contrail
            - /etc/contrail
        - name: register contrail config issu env file
          stat:
            path: *contrail_issu_env_file
          register: p
        - name: create contrail config issu env file
          copy:
            dest: *contrail_issu_env_file
            content: ""
          when: not p.stat.exists

        - name: set contrail base calculated parameters
          set_fact:
            contrail_base_env_params: *contrail_common_base_env
        - name: write contrail base parameters to environment file
          lineinfile:
            dest: *contrail_issu_env_file
            state: present
            line: "{{ item }}"
          with_items: "{{ contrail_base_env_params }}"

        - name: get dmi
          shell: |
            #!/bin/sh
            dmidecode --s system-uuid | awk 'match($0, /[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/) { print substr($0, RSTART, RLENGTH) }'
          register: dmi
        - name: set dmi fact
          set_fact:
            dmi_uuid: "{{ dmi.stdout }}"
        - name: get contrail_settings
          shell: "hiera -c /etc/puppet/hiera.yaml contrail_settings ::uuid={{ dmi_uuid }} | sed 's/=>/:/g'"
          register: contrail_settings_string
        - name: turn contrail_settings into json
          set_fact:
            contrail_settings: "{{ contrail_settings_string.stdout | from_json }}"
          when:
            - contrail_settings_string.stdout is defined
            - contrail_settings_string.stdout != "nil"
        - name: write contrail settings to file
          lineinfile:
            dest: *contrail_issu_env_file
            regexp: "^{{ item.key }}.*"
            line: "{{ item.key }}={{ item.value }}"
            state: present
          with_dict: "{{ contrail_settings }}"
          when: contrail_settings is defined

        - name: get nova api
          shell: *get_nova_api_network_cmd
          register: nova_api_host

        - name: node ips (names) param name
          set_fact:
            contrail_nodes_param_name: {list_join: ["_", ["contrail_issu", {get_param: contrail_nodes_param_suffux}]]}
        - name: get contrail issu node ips
          shell: "hiera -c /etc/puppet/hiera.yaml {{ contrail_nodes_param_name }}"
          register: contrail_issu_nodes_list
        - name: turn contrail config ips into string
          set_fact:
            contrail_issu_nodes_string: "{{ contrail_issu_nodes_list.stdout | from_json | join(',') }}"
        - name: write contrail issu config node ips to environment file
          lineinfile:
            dest: *contrail_issu_env_file
            state: present
            regexp: "^{{ item.key }}.*"
            line: "{{ item.key }}={{ item.value }}"
          with_dict:
            CONFIG_API_PORT: *contrail_issu_api_port
            ANALYTICS_ALARM_ENABLE: 'True'
            ANALYTICS_SNMP_ENABLE: 'True'
            ANALYTICSDB_ENABLE: 'True'
            ANALYTICS_NODES: "{{ contrail_issu_nodes_string }}"
            ANALYTICS_SNMP_NODES: "{{ contrail_issu_nodes_string }}"
            ANALYTICS_ALARM_NODES: "{{ contrail_issu_nodes_string }}"
            ANALYTICSDB_NODES: "{{ contrail_issu_nodes_string }}"
            CONFIG_NODES: "{{ contrail_issu_nodes_string }}"
            CONFIGDB_NODES: "{{ contrail_issu_nodes_string }}"
            WEBUI_NODES: "{{ contrail_issu_nodes_string }}"
            RABBITMQ_NODES: "{{ contrail_issu_nodes_string }}"
            RABBITMQ_NODE_PORT: 5673
            RABBITMQ_ERLANG_COOKIE: "abcdefg"
            KAFKA_NODES: "{{ contrail_issu_nodes_string }}"
            IPFABRIC_SERVICE_HOST: "{{ nova_api_host.stdout }}"
            # for 5.0 compatibility, starting from 5.1 it has correct default
            ZOOKEEPER_PORTS: "2888:3888"
            ZOOKEEPER_PORT: "2181"
            ZOOKEEPER_NODES: "{{ contrail_issu_nodes_string }}"
            ZOOKEEPER_ANALYTICS_PORT: "2181"
            ZOOKEEPER_ANALYTICS_NODES: "{{ contrail_issu_nodes_string }}"

        - name: register contrail issu config database env file
          stat:
            path: *contrail_issu_configdb_env_file
          register: p
        - name: create contrail issu config database env file
          copy:
            dest: *contrail_issu_configdb_env_file
            content: ""
          when: not p.stat.exists
        - name: write contrail issu configdb env vars
          lineinfile:
            dest: *contrail_issu_configdb_env_file
            state: present
            line: "{{ item }}"
          with_items:
            - "NODE_TYPE=config-database"
            - "CASSANDRA_SEEDS={{ contrail_issu_nodes_string }}"
            - "CASSANDRA_START_RPC=true"
            - "CASSANDRA_CLUSTER_NAME=contrail_database"
            - "CASSANDRA_PORT=9161"
            - "CASSANDRA_CQL_PORT=9041"
            - "CASSANDRA_SSL_STORAGE_PORT=7013"
            - "CASSANDRA_STORAGE_PORT=7012"
            - "CASSANDRA_JMX_LOCAL_PORT=7201"

        - name: register contrail issu analytics database env file
          stat:
            path: *contrail_issu_analyticsdb_env_file
          register: p
        - name: create contrail issu analytics database env file
          copy:
            dest: *contrail_issu_analyticsdb_env_file
            content: ""
          when: not p.stat.exists
        - name: write contrail issu analytics database specific env cars
          lineinfile:
            dest: *contrail_issu_analyticsdb_env_file
            state: present
            line: "{{ item }}"
          with_items:
            - "NODE_TYPE=database"
            - "CASSANDRA_SEEDS={{ contrail_issu_nodes_string }}"
            - "CASSANDRA_START_RPC=true"
            - "CASSANDRA_CLUSTER_NAME=contrail_analytics"
            - "CASSANDRA_PORT=9160"
            - "CASSANDRA_CQL_PORT=9042"
            - "CASSANDRA_SSL_STORAGE_PORT=7011"
            - "CASSANDRA_STORAGE_PORT=7010"
            - "CASSANDRA_JMX_LOCAL_PORT=7200"

        - name: contrail webui CA
          set_fact:
            contrail_webui_ca: {get_param: ContrailCA}
        - name: overwrite contrail webui cert files for IPA
          block:
            - name: contrail webui server cert
              set_fact:
                contrail_webui_cert: {get_param: ContrailServiceCertFile}
            - name: contrail webui server key
              set_fact:
                contrail_webui_key: {get_param: ContrailServiceKeyFile}
            - name: set contrail webui certs for IPA case
              lineinfile:
                dest: *contrail_issu_env_file
                state: present
                regexp: "^{{ item.key }}.*"
                line: "{{ item.key }}={{ item.value }}"
              with_dict:
                WEBUI_SSL_CERT_FILE: "{{ contrail_webui_cert }}"
                WEBUI_SSL_KEY_FILE: "{{ contrail_webui_key }}"
          when: contrail_webui_ca == 'IPA'

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

