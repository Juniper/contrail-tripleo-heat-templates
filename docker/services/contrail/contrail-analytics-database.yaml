heat_template_version: queens

description: >
  Contrail containerized Config Database service

parameters:
  ContrailImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string
  ContrailAnalyticsDBMinDiskGB:
    description:  The min size for Contrail Analytics DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''
  ContrailAnalyticsDBPath:
    description:  The path to cassandra database directory. Default
                  will be /var/lib/docker/volumes/analytics_cassandra_data/_data.
    type: string
    default: 'analytics_cassandra_data'
  ContrailAnalyticsCommitlogPath:
    description:  The path to cassandra commitlog directory. Default
                  will be /var/lib/docker/volumes/analytics_cassandra_commitlog/_data.
    type: string
    default: 'analytics_cassandra_commitlog'
  DockerContrailCassandraImageName:
    description: image
    type: string
    default: "contrail-external-cassandra"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  contrail_nodes_param_suffux:
    type: string
    default: "node_ips"
    description: suffix for reading hiera data, node_ips or node_names

conditions:
  contrail_analyticsdb_min_disk_gb_unset: {equals : [{get_param: ContrailAnalyticsDBMinDiskGB}, '']}
  is_not_5_0:
    not:
      yaql:
        expression: $.data.split(":")[-1].matches("5\.0")
        data: {get_param: ContrailImageTag}
  is_more_than_2001_or_latest:
    or:
      - yaql:
          expression: $.data.matches(".*latest.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.matches(".*master.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.split(".").select($.split("-")).flatten().where($.matches("^[0-9]+$")).where(int($) >= 2001).any()
          data: {get_param: ContrailImageTag}
resources:
  DockerContrailCassandraImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailCassandraImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  ContrailQueryEngine:
    type: contrail-analytics-query-engine.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  ContrailAnalyticsKafka:
    type: contrail-analytics-kafka.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Analytics Database service.
    value:
      service_name: contrail_analytics_database
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - tripleo.contrail_analytics_database.firewall_rules:
              '115 contrail_analytics_database':
                dport:
                  list_concat:
                    - # cassandra
                      - 7010
                      - 7011
                      - 7200
                      # database nodemgr
                      - 8103
                      # cassandra
                      - 9042
                      - 9160
                    - if:
                        - is_not_5_0
                        - {get_attr: [ContrailQueryEngine, role_data, analytics_query_engine_ports]}
                        - {get_attr: [ContrailAnalyticsKafka, role_data, contrail_analytics_kafka_ports]}
      service_config_settings: {get_attr: [ContrailBase, role_data, service_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_analytics_database.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_3:
          if:
            - is_not_5_0
            - {}
            - get_attr: [ContrailAnalyticsKafka, role_data, docker_config, step_3]
        step_4:
          map_merge:
            - contrail_analytics_database:
                image: &contrail_analytics_database_image {get_attr: [DockerContrailCassandraImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - list_join:
                          - ':'
                          - - {get_param: ContrailAnalyticsDBPath}
                            - '/var/lib/cassandra/data'
                      - list_join:
                          - ':'
                          - - {get_param: ContrailAnalyticsCommitlogPath}
                            - '/var/lib/cassandra/commitlog'
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
            - if:
                - is_not_5_0
                - {}
                - get_attr: [ContrailAnalyticsKafka, role_data, docker_config, step_4]
        step_5:
          map_merge:
            - contrail_analytics_database_nodemgr:
                image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                    - if:
                      - contrail_analyticsdb_min_disk_gb_unset
                      - []
                      - - list_join:
                          - ''
                          - - 'DATABASE_NODEMGR__DEFAULTS__minimum_diskGB='
                            - {get_param: ContrailAnalyticsDBMinDiskGB}
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
            - if:
                - is_more_than_2001_or_latest
                - contrail_analytics_database_provisioner:
                    image: {get_attr: [ContrailBase, role_data, contrail_provisioner_image_name]}
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                        - {get_attr: [ContrailBase, role_data, contrail_defaults_env]}
                    env_file:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                        - - *contrail_env_file
                - null
            - if:
                - is_not_5_0
                - get_attr: [ContrailQueryEngine, role_data, docker_config, step_5]
                - get_attr: [ContrailAnalyticsKafka, role_data, docker_config, step_5]

      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register contrail analytics database env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail analytics database env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: contrail analytics database cassandra service specific node ips param name
              set_fact:
                contrail_analytics_cassandra_param_name: {list_join: ["_", ["contrail_analytics_database", {get_param: contrail_nodes_param_suffux}]]}
            - name: get contrail service specific node ips
              shell: "hiera -c /etc/puppet/hiera.yaml {{ contrail_analytics_cassandra_param_name }}"
              register: contrail_analytics_cassandra_nodes_list
            - name: turn contrail analytics database specific node ips into string
              set_fact:
                contrail_analytics_cassandra_nodes_string: "{{ contrail_analytics_cassandra_nodes_list.stdout | from_json | join(',')  }}"
            - name: write contrail analytics database specific env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items:
                - "NODE_TYPE=database"
                - "CASSANDRA_SEEDS={{ contrail_analytics_cassandra_nodes_string }}"
                - "CASSANDRA_START_RPC=true"
                - "CASSANDRA_CLUSTER_NAME=contrail_analytics"
                - "CASSANDRA_PORT=9160"
                - "CASSANDRA_CQL_PORT=9042"
                - "CASSANDRA_SSL_STORAGE_PORT=7011"
                - "CASSANDRA_STORAGE_PORT=7010"
                - "CASSANDRA_JMX_LOCAL_PORT=7200"
          - if:
              - is_not_5_0
              - {get_attr: [ContrailQueryEngine, role_data, host_prep_tasks]}
              - {get_attr: [ContrailAnalyticsKafka, role_data, host_prep_tasks]}

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      fast_forward_upgrade_tasks:
        - name: Stop contrail analytics database services
          service: name={{ item }} state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
          with_items:
            - contrail-database
            - supervisor-database
            - kafka
            - cassandra
            - zookeeper

      fast_forward_post_upgrade_tasks:
        get_attr: [ContrailBase, role_data, fast_forward_post_upgrade_tasks_common]

      upgrade_tasks:
        get_attr: [ContrailBase, role_data, upgrade_tasks_common]
