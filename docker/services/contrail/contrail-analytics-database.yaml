heat_template_version: queens

description: >
  Contrail containerized Config Databse service

parameters:
  ContrailAnalyticsDBMinDiskGB:
    description:  The min size for Contrail Analytics DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''
  ContrailAnalyticsDBPath:
    description:  The path to cassandra database directory. Default
                  will be /var/lib/docker/volumes/analytics_cassandra_data/_data.
    type: string
    default: 'analytics_cassandra_data'
  ContrailAnalyticsCommitlogPath:
    description:  The path to cassandra commitlog directory. Default
                  will be /var/lib/docker/volumes/analytics_cassandra_commitlog/_data.
    type: string
    default: 'analytics_cassandra_commitlog'
  DockerContrailCassandraImageName:
    description: image
    type: string
    default: "contrail-external-cassandra"
  DockerContrailKafkaImageName:
    description: image
    type: string
    default: "contrail-external-kafka"
  DockerContrailZookeeperImageName:
    description: image
    type: string
    default: "contrail-external-zookeeper"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

conditions:
  contrail_analyticsdb_min_disk_gb_unset: {equals : [{get_param: ContrailAnalyticsDBMinDiskGB}, '']}

resources:
  ContainersCommon:
    type: ../containers-common.yaml

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      contrail_service_name: "contrail_analytics_database"

outputs:
  role_data:
    description: Role data for the Contrail Analytics Database service.
    value:
      service_name: contrail_analytics_database
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - tripleo.contrail_analytics_database.firewall_rules:
              '115 contrail_analytics_database':
                dport:
                  - 2182
                  - '4888-5888'
                  - 7010
                  - 7011
                  - 7200
                  - 8103
                  - 9042
                  - 9092
                  - 9160
      service_config_settings: {get_attr: [ContrailBase, role_data, service_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_analytics_database.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_3:
          contrail_analytics_zookeeper:
            image: &contrail_analytics_zookeeper_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailZookeeperImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - analytics_zookeeper:/data
                  - analytics_zookeeper:/datalog
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
        step_4:
          contrail_analytics_database_nodemgr:
            image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
            net: host
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - /var/run/docker.sock:/var/run/docker.sock
            environment:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                - if:
                  - contrail_analyticsdb_min_disk_gb_unset
                  - []
                  - - list_join:
                      - ''
                      - - 'DATABASE_NODEMGR__DEFAULTS__minimum_diskGB='
                        - {get_param: ContrailAnalyticsDBMinDiskGB}
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_database:
            image: &contrail_analytics_database_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailCassandraImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - list_join:
                      - ':'
                      - - {get_param: ContrailAnalyticsDBPath}
                        - '/var/lib/cassandra/data'
                  - list_join:
                      - ':'
                      - - {get_param: ContrailAnalyticsCommitlogPath}
                        - '/var/lib/cassandra/commitlog'
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_kafka:
            image: &contrail_analytics_kafka_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailKafkaImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register contrail analytics database env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail analytics database env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: write analytics db specific env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items:
                - NODE_TYPE=database
                - CASSANDRA_START_RPC=true
                - CASSANDRA_CLUSTER_NAME=contrail_analytics
                - CASSANDRA_PORT=9160
                - CASSANDRA_CQL_PORT=9042
                - CASSANDRA_SSL_STORAGE_PORT=7011
                - CASSANDRA_STORAGE_PORT=7010
                - CASSANDRA_JMX_LOCAL_PORT=7200
                - ZOOKEEPER_PORTS=4888:5888
                - ZOOKEEPER_PORT=2182
      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      fast_forward_upgrade_tasks:
        - name: Stop contrail analytics database services
          service: name={{ item }} state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
          with_items:
            - contrail-database
            - supervisor-database

      fast_forward_post_upgrade_tasks: []
