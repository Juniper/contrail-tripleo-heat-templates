heat_template_version: queens

description: >
  Contrail containerized Config Analytics service

parameters:
  ContrailImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string
  ContrailAnalyticsApiSslSupport:
    default: false
    description: Analytics Api uses Ssl
    type: boolean
  DockerContrailAnalyticsApiImageName:
    description: image
    type: string
    default: "contrail-analytics-api"
  DockerContrailAnalyticsCollectorImageName:
    description: image
    type: string
    default: "contrail-analytics-collector"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

conditions:
  is_not_5_0:
    not:
      yaql:
        expression: $.data.split(":")[-1].matches("5\.0")
        data: {get_param: ContrailImageTag}
  is_more_than_2001_or_latest:
    or:
      - yaql:
          expression: $.data.matches(".*dev.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.matches(".*latest.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.matches(".*master.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.split(".").select($.split("-")).flatten().where($.matches("^[0-9]+$")).where(int($) >= 2001).any()
          data: {get_param: ContrailImageTag}

  # check tag by template someprefix-queens-<version>-<build_number>
  analytics_api_supports_ssl:
    or:
      - {equals: [{get_param: ContrailAnalyticsApiSslSupport}, true]}
      - yaql:
          expression: $.data.split("-").where($.matches("^[0-9]+$")).where($ >= "1910").any()
          data: {get_param: ContrailImageTag}

resources:
  DockerContrailAnalyticsApiImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsApiImageName}

  DockerContrailAnalyticsCollectorImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailAnalyticsCollectorImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  ContrailRedis:
    type: contrail-redis.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      env_file_name: '/etc/contrail/common_analytics.env'
      contrail_stunnel_support: true

  ContrailQueryEngine:
    type: contrail-analytics-query-engine.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Analytics service.
    value:
      service_name: contrail_analytics
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - get_attr: [ContrailRedis, role_data, config_settings]
          - tripleo.contrail_analytics.firewall_rules:
              '117 contrail_analytics':
                dport:
                  list_concat:
                    -  # collector structured syslog
                      - 3514
                      # op server
                      - 8081
                      # collector
                      - 8086
                      # http collector
                      - 8089
                      # http op server
                      - 8090
                      # op server admin
                      - 8181
                      # analytics nodemgr
                      - 8104
                    - {get_attr: [ContrailRedis, role_data, contrail_redis_ports]}
                    - if:
                        - is_not_5_0
                        - null
                        - {get_attr: [ContrailQueryEngine, role_data, analytics_query_engine_ports]}
      service_config_settings:
        map_merge:
          - {get_attr: [ContrailBase, role_data, service_config_settings]}
          - haproxy:
              tripleo.contrail_analytics.haproxy_endpoints:
                contrail_analytics:
                  map_merge:
                    - public_ssl_port: 18081
                      internal_ip:
                        str_replace:
                          template: "%{hiera('NETWORK_virtual_ip')}"
                          params:
                            NETWORK: {get_param: [ServiceNetMap, ContrailAnalyticsNetwork]}
                      service_port: 8081
                      service_network: {get_param: [ServiceNetMap, ContrailAnalyticsNetwork]}
                    - if:
                        - analytics_api_supports_ssl
                        - {get_attr: [ContrailBase, role_data, haproxy_config_settings_api]}
                        - {get_attr: [ContrailBase, role_data, haproxy_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_analytics.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_4:
          get_attr: [ContrailRedis, role_data, docker_config, step_4]
        step_5:
          map_merge:
            - contrail_analytics_nodemgr:
                image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
              contrail_analytics_api:
                image: &contrail_analytics_api_image {get_attr: [DockerContrailAnalyticsApiImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                restart: always
                user: root
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
              contrail_analytics_collector:
                image: &contrail_analytics_collector_image {get_attr: [DockerContrailAnalyticsCollectorImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
            - if:
                - is_more_than_2001_or_latest
                - contrail_analytics_provisioner:
                    image: {get_attr: [ContrailBase, role_data, contrail_provisioner_image_name]}
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                        - {get_attr: [ContrailBase, role_data, contrail_defaults_env]}
                    env_file:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                        - - *contrail_env_file
                - null
            - if:
                - is_not_5_0
                - null
                - get_attr: [ContrailQueryEngine, role_data, docker_config, step_5]

      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register create contrail analytics env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail analytics env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: write remaining contrail analytics env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items:
                - NODE_TYPE=analytics
          - if:
              - is_not_5_0
              - null
              - {get_attr: [ContrailQueryEngine, role_data, host_prep_tasks]}

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      fast_forward_upgrade_tasks:
        - name: Stop contrail analytics services
          service: name={{ item }} state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
          with_items:
            - supervisor-analytics
            - redis

      fast_forward_post_upgrade_tasks:
        get_attr: [ContrailBase, role_data, fast_forward_post_upgrade_tasks_common]

      upgrade_tasks:
        get_attr: [ContrailBase, role_data, upgrade_tasks_common]
