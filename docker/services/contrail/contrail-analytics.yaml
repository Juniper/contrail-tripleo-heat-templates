heat_template_version: queens

description: >
  Contrail containerized Config Analytics service

parameters:
  DockerContrailAnalyticsApiImageName:
    description: image
    type: string
    default: "contrail-analytics-api"
  DockerContrailAnalyticsQueryEngineImageName:
    description: image
    type: string
    default: "contrail-analytics-query-engine"
  DockerContrailAnalyticsCollectorImageName:
    description: image
    type: string
    default: "contrail-analytics-collector"
  DockerContrailAnalyticsAlarmGenImageName:
    description: image
    type: string
    default: "contrail-analytics-alarm-gen"
  DockerContrailAnalyticsTopologyImageName:
    description: image
    type: string
    default: "contrail-analytics-topology"
  DockerContrailAnalyticsSnmpCollectorImageName:
    description: image
    type: string
    default: "contrail-analytics-snmp-collector"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:
  ContainersCommon:
    type: ../containers-common.yaml

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  ContrailRedis:
    type: contrail-redis.yaml
    properties:
      env_file_name: '/etc/contrail/common_analytics.env'

outputs:
  role_data:
    description: Role data for the Contrail Analytics service.
    value:
      service_name: contrail_analytics
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - get_attr: [ContrailRedis, role_data, config_settings]
          - tripleo.contrail_analytics.firewall_rules:
              '117 contrail_analytics':
                dport:
                  list_concat:
                    - - 3514
                      - 5920
                      - 5921
                      - 5995
                      - 8081
                      - 8086
                      - 8089
                      - 8090
                      - 8091
                      - 8181
                      - 8104
                    - {get_attr: [ContrailRedis, role_data, contrail_redis_ports]}
      service_config_settings:
        map_merge:
          - {get_attr: [ContrailBase, role_data, service_config_settings]}
          - haproxy:
              tripleo.contrail_analytics.haproxy_endpoints:
                contrail_analytics:
                  map_merge:
                    - public_ssl_port: 18081
                      internal_ip: "%{hiera('contrail_analytics_vip')}"
                      service_port: 8081
                      service_network: {get_param: [ServiceNetMap, ContrailAnalyticsNetwork]}
                    - {get_attr: [ContrailBase, role_data, haproxy_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_analytics.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_4:
          get_attr: [ContrailRedis, role_data, docker_config, step_4]
        step_5:
          contrail_analytics_nodemgr:
            image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
            net: host
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - /var/run/docker.sock:/var/run/docker.sock
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_api:
            image: &contrail_analytics_api_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailAnalyticsApiImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            restart: always
            user: root
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_queryengine:
            image: &contrail_analytics_queryengine_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailAnalyticsQueryEngineImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_collector:
            image: &contrail_analytics_collector_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailAnalyticsCollectorImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_alarmgen:
            image: &contrail_analytics_alarmgen_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailAnalyticsAlarmGenImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_topology:
            image: &contrail_analytics_topology_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailAnalyticsTopologyImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_analytics_snmp_collector:
            image: &contrail_analytics_snmp_collector_image
              list_join:
                - ''
                - - {get_attr: [ContrailBase, role_data, contrail_registry]}
                  - '/'
                  - {get_param: DockerContrailAnalyticsSnmpCollectorImageName}
                  - ':'
                  - {get_attr: [ContrailBase, role_data, contrail_imagetag]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register create contrail analytics env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail analytics env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: write remaining contrail config env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items:
                - NODE_TYPE=analytics
      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]
