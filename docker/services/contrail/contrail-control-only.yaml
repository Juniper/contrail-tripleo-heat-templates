heat_template_version: queens

description: >
  Contrail containerized Config Control service

parameters:
  ContrailImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string
  DockerContrailControlControlImageName:
    description: image
    type: string
    default: "contrail-controller-control-control"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

conditions:
  is_more_than_2001_or_latest:
    or:
      - yaql:
          expression: $.data.matches(".*dev.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.matches(".*latest.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.matches(".*master.*")
          data: {get_param: ContrailImageTag}
      - yaql:
          expression: $.data.split(".").select($.split("-")).flatten().where($.matches("^[0-9]+$")).where(int($) >= 2001).any()
          data: {get_param: ContrailImageTag}

resources:
  DockerContrailControlControlImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailControlControlImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Control service.
    value:
      service_name: contrail_control_only
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - contrail_control_host_ip:
              str_replace:
                template:
                  "%{hiera('$NETWORK')}"
                params:
                  $NETWORK: {get_param: [ServiceNetMap, ContrailControlOnlyNetwork]}
            contrail_control_hostname:
              str_replace:
                template:
                  "%{hiera('fqdn_$NETWORK')}"
                params:
                  $NETWORK: {get_param: [ServiceNetMap, ContrailControlOnlyNetwork]}
            tripleo.contrail_control_only.firewall_rules:
              '113 contrail_control_only':
                dport:
                  - 179
                  - 5269
                  - 8083
                  - 8092
                  - 8093
                  - 8094
                  - 8101
      service_config_settings: {get_attr: [ContrailBase, role_data, service_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_control.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_5:
          map_merge:
            - if:
                - is_more_than_2001_or_latest
                - contrail_control_provisioner:
                    image: {get_attr: [ContrailBase, role_data, contrail_provisioner_image_name]}
                    net: host
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                        - {get_attr: [ContrailBase, role_data, contrail_defaults_env]}
                    env_file:
                      list_concat:
                        - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                        - - *contrail_env_file
                - null
            - contrail_control_nodemgr:
                image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
                net: host
                detach: true
                user: root
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                    - - /var/run/docker.sock:/var/run/docker.sock
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
              contrail_control_control:
                image: &contrail_control_control_image {get_attr: [DockerContrailControlControlImageNormalize, contrail_image]}
                net: host
                privileged: false
                detach: true
                user: root
                restart: always
                volumes:
                  get_attr: [ContrailBase, role_data, contrail_base_volumes]
                environment:
                  get_attr: [ContrailBase, role_data, contrail_base_env]
                env_file:
                  list_concat:
                    - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                    - - *contrail_env_file
      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register contrail control only env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail control only env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: contrail control fqdn
              shell: hiera -c /etc/puppet/hiera.yaml contrail_control_hostname
              register: contrail_control_hostname
              ignore_errors: True
            - name: set control specific env list
              set_fact:
                control_env_list: [ "NODE_TYPE=control" ]
            - name: add hostname to control specific env list
              set_fact:
                control_env_list: "{{ control_env_list }} + [ 'CONTROL_HOSTNAME={{ contrail_control_hostname.stdout }}' ]"
              when:
                - contrail_control_hostname.rc == 0
                - contrail_control_hostname.stdout != ""
            - name: write remaining contrail control config env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items: "{{ control_env_list }}"

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      fast_forward_upgrade_tasks:
        - name: Stop contrail control services
          service: name={{ item }} state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
          with_items:
            - supervisor-control

      fast_forward_post_upgrade_tasks:
        get_attr: [ContrailBase, role_data, fast_forward_post_upgrade_tasks_common]

      upgrade_tasks:
        get_attr: [ContrailBase, role_data, upgrade_tasks_common]
