heat_template_version: queens

description: >
  Contrail containerized Config Databse service

parameters:
  ContrailConfigDBMinDiskGB:
    description:  The min size for Contrail Config DB.
                  It is to check the size of the node.
                  Contrail will fail installation if disk size is not enough.
    type: string
    default: ''
  DockerContrailCassandraImageName:
    description: image
    type: string
    default: "contrail-external-cassandra"
  DockerContrailZookeeperImageName:
    description: image
    type: string
    default: "contrail-external-zookeeper"
  DockerContrailRabbitmqImageName:
    description: image
    type: string
    default: "contrail-external-rabbitmq"
  DockerContrailRabbitmqLogPath:
    description: Path where rabbitmq logs will be stored. If set to
                 empty value, container default will be used, which
                 is usually set to '-', resulting in logs going to 
                 stdout
    type: string
    default: "/var/log/contrail"
  DockerContrailConfigDatabaseVolume:
    default: 'config_cassandra'
    description: Docker volume for contrail config DB service
    type: string
  DockerContrailConfigZookeeperVolume:
    default: 'config_zookeeper'
    description: Docker volume for contrail config zookeeper service
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

conditions:
  contrail_configdb_min_disk_gb_unset: {equals : [{get_param: ContrailConfigDBMinDiskGB}, '']}

  rabbitmq_log_keep_default: {equals : [{get_param: DockerContrailRabbitmqLogPath}, '']}

resources:
  DockerContrailCassandraImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailCassandraImageName}

  DockerContrailZookeeperImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailZookeeperImageName}

  DockerContrailRabbitmqImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailRabbitmqImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}
      contrail_cassandra_service_name: "contrail_database"

outputs:
  role_data:
    description: Role data for the Contrail Config Database service.
    value:
      service_name: contrail_database
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - tripleo.contrail_database.firewall_rules:
              '114 contrail_database':
                dport:
                  - 2181
                  - '2888-3888'
                  - 4369
                  - 5673
                  - 7012
                  - 7013
                  - 7201
                  - 8112
                  - 9041
                  - 9161
                  - 25673
      service_config_settings: {get_attr: [ContrailBase, role_data, service_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_config_database.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_3:
          contrail_config_rabbitmq:
            image: &contrail_config_rabbitmq_image {get_attr: [DockerContrailRabbitmqImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              list_concat:
                - get_attr: [ContrailBase, role_data, contrail_base_env]
                - if:
                  - rabbitmq_log_keep_default
                  - []
                  - - list_join:
                      - '='
                      - - 'RABBITMQ_LOGS'
                        - list_join:
                          - '/'
                          - - {get_param: DockerContrailRabbitmqLogPath}
                            - 'rabbitmq.log'
                    - list_join:
                      - '='
                      - - 'RABBITMQ_SASL_LOGS'
                        - list_join:
                          - '/'
                          - - {get_param: DockerContrailRabbitmqLogPath}
                            - 'rabbitmq_sasl.log'
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_config_zookeeper:
            image: &contrail_config_zookeeper_image {get_attr: [DockerContrailZookeeperImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - list_join:
                      - ':'
                      - - {get_param: DockerContrailConfigZookeeperVolume}
                        - '/data'
                  - list_join:
                      - ':'
                      - - {get_param: DockerContrailConfigZookeeperVolume}
                        - '/datalog'
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
        step_4:
          contrail_config_database_nodemgr:
            image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
            net: host
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - /var/run/docker.sock:/var/run/docker.sock
            environment:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                - if:
                  - contrail_configdb_min_disk_gb_unset
                  - []
                  - - list_join:
                      - ''
                      - - 'CONFIG_DATABASE_NODEMGR__DEFAULTS__minimum_diskGB='
                        - {get_param: ContrailConfigDBMinDiskGB}
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_config_database:
            image: &contrail_config_database_image {get_attr: [DockerContrailCassandraImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - list_join:
                      - ':'
                      - - {get_param: DockerContrailConfigDatabaseVolume}
                        - '/var/lib/cassandra'
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register contrail env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: write remaining contrail config env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items:
                - NODE_TYPE=config-database
                - CASSANDRA_START_RPC=true
                - CASSANDRA_CLUSTER_NAME=contrail_database
                - CASSANDRA_PORT=9161
                - CASSANDRA_CQL_PORT=9041
                - CASSANDRA_SSL_STORAGE_PORT=7013
                - CASSANDRA_STORAGE_PORT=7012
                - CASSANDRA_JMX_LOCAL_PORT=7201
                - ZOOKEEPER_PORTS=2888:3888
                - ZOOKEEPER_PORT=2181
                - RABBITMQ_ERLANG_COOKIE=abcdefg

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      upgrade_tasks: []
      post_upgrade_tasks: []

      fast_forward_upgrade_tasks:
        - name: Stop contrail config database services
          service: name={{ item }} state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
          with_items:
            - contrail-database
            - cassandra
            - zookeeper

      fast_forward_post_upgrade_tasks:
        get_attr: [ContrailBase, role_data, fast_forward_post_upgrade_tasks_common]

      upgrade_tasks:
        get_attr: [ContrailBase, role_data, upgrade_tasks_common]
