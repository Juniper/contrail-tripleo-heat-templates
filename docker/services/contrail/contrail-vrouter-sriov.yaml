heat_template_version: queens

description: >
  Contrail containerized Vrouter service

parameters:
  DockerContrailVrouterAgentImageName:
    description: image
    type: string
    default: "contrail-vrouter-agent"
  DockerContrailNovaPluginImageName:
    description: image
    type: string
    default: "contrail-openstack-compute-init"
  NeutronMetadataProxySharedSecret:
    description: Metadata Secret
    type: string
    hidden: true
  ContrailVrouterModuleOptions:
    default: ''
    description: >
      Vrouter kernel module options.
      This string is passed to agent container as env variable VROUTER_MODULE_OPTIONS
      (by a chance if vrouter module is loaded by container) and
      it is saved as options in /etc/modprobe.d/vrouter.conf for a case
      when vrouter is loaded by ifup scripts called by os-collect-config from host.
      E.g. vr_mpls_labels=196000 vr_nexthops=521000 vr_vrfs=65536 vr_bridge_entries=1000000
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  ContrailSriovMode:
    default: 'kernel'
    type: string
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:
  ContrailVrouterBase:
    type: contrail-vrouter-base.yaml

  DockerContrailVrouterAgentImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailVrouterAgentImageName}

  DockerContrailNovaPluginImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailNovaPluginImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Vrouter Sriov service.
    value:
      service_name: contrail_vrouter_sriov
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - contrail::vrouter::metadata_proxy_shared_secret: {get_param: NeutronMetadataProxySharedSecret}
            contrail_sriov_mode: {get_param: ContrailSriovMode}
            tripleo.contrail_vrouter_sriov.firewall_rules:
              '111 contrail_vrouter_sriov_8085_8097':
                dport:
                  - 8085
                  - 8097
                  - 8102
                  - 9091
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_vrouter.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_3:
          contrail_nova_plugin:
            image: &contrail_nova_plugin_image {get_attr: [DockerContrailNovaPluginImageNormalize, contrail_image]}
            volumes:
              - vrouter_port_control:/opt/plugin/bin
              - vif_plug_vrouter:/usr/lib/python2.7/site-packages/vif_plug_vrouter
              - nova_contrail_vif:/usr/lib/python2.7/site-packages/nova_contrail_vif
              - nova_contrail_vif_egg:/usr/lib/python2.7/site-packages/nova_contrail_vif-0.1-py2.7.egg-info
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
        step_5:
          contrail_vrouter_agent_nodemgr:
            image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
            net: host
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - /var/run/docker.sock:/var/run/docker.sock
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_vrouter_agent:
            image: &contrail_vrouter_agent_image {get_attr: [DockerContrailVrouterAgentImageNormalize, contrail_image]}
            net: host
            privileged: true
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - /dev:/dev
                  - /etc/sysconfig/network-scripts:/etc/sysconfig/network-scripts
                  - /lib/modules:/lib/modules
                  - /var/run:/var/run
                  - /var/lib/contrail:/var/lib/contrail
            environment:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env]}
                - - list_join:
                      - '='
                      - - VROUTER_MODULE_OPTIONS
                        - {get_param: ContrailVrouterModuleOptions}
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register contrail sriov env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail sriov env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: contrail sriov get metadata secret
              shell: hiera -c /etc/puppet/hiera.yaml contrail::vrouter::metadata_proxy_shared_secret
              register: contrail_sriov_metadata_secret
            - name: get scontrail sriov mode
              shell: hiera -c /etc/puppet/hiera.yaml contrail_sriov_mode
              register: contrail_sriov_mode
            - name: write remaining contrail sriov env vars
              lineinfile:
                dest: *contrail_env_file
                line: "{{ item }}"
                state: present
              with_items:
                - NODE_TYPE=vrouter
                - METADATA_PROXY_SECRET={{ contrail_sriov_metadata_secret.stdout }}
                - AGENT_MODE={{ contrail_sriov_mode.stdout }}

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      update_tasks:
        get_attr: [ContrailVrouterBase, role_data, update_tasks]
      
      post_update_tasks:
        get_attr: [ContrailVrouterBase, role_data, post_update_tasks]

      fast_forward_upgrade_tasks:
        get_attr: [ContrailVrouterBase, role_data, fast_forward_upgrade_tasks]

      fast_forward_post_upgrade_tasks:
        get_attr: [ContrailVrouterBase, role_data, fast_forward_post_upgrade_tasks]

      upgrade_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, upgrade_tasks_common]}
          - {get_attr: [ContrailVrouterBase, role_data, upgrade_tasks]}
      
      post_upgrade_tasks:
        get_attr: [ContrailVrouterBase, role_data, post_upgrade_tasks]
