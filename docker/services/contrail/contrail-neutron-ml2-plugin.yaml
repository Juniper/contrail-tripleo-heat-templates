heat_template_version: queens

description: >
  OpenStack containerized Contrail Neutron ML2 Plugin configured with Puppet

parameters:
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DockerNeutronConfigImage:
    description: The container image to use for the neutron config_volume
    type: string
    default: "contrail-openstack-neutron-init"
  DefaultPasswords:
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  DockerContrailNeutronMl2PluginImageName:
    description: The container image to use for the contrail neutron plugin
    type: string
    default: "contrail-openstack-neutron-ml2-init"
  NeutronPluginMl2PuppetTags:
    default: 'neutron_plugin_ml2'
    description: Puppet resource tag names that are used to generate config files with puppet
    type: string

resources:
  DockerContrailNeutronMl2PluginImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailNeutronMl2PluginImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Neutron Plugin role.
    value:
      service_name: contrail_neutron_plugin
      config_settings: get_attr: [ContrailBase, role_data, config_settings]
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: 'neutron'
        puppet_tags: {get_param: NeutronPluginMl2PuppetTags}
        step_config:
          include ::tripleo::network::contrail::neutron_ml2_plugin
        config_image: {get_param: DockerNeutronConfigImage}
      kolla_config: {}
      docker_config:
        step_3:
          contrail_neutron_plugin:
            image: &contrail_neutron_plugin_image {get_attr: [DockerContrailNeutronMl2PluginImageNormalize, contrail_image]}
            volumes:
              - opt_plugin:/opt/plugin
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              get_attr: [ContrailBase, role_data, contrail_base_env_file]

      host_prep_tasks: []

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]
