heat_template_version: rocky

description: >
  Contrail containerized Config Control service

parameters:
  DockerContrailControlControlImageName:
    description: image
    type: string
    default: "contrail-controller-control-control"
  DockerContrailControlNamedImageName:
    description: image
    type: string
    default: "contrail-controller-control-named"
  DockerContrailControlDnsImageName:
    description: image
    type: string
    default: "contrail-controller-control-dns"
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:
  DockerContrailControlControlImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailControlControlImageName}

  DockerContrailControlNamedImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailControlNamedImageName}

  DockerContrailControlDnsImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailControlDnsImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Control service.
    value:
      service_name: contrail_control
      config_settings:
        map_merge:
          - get_attr: [ContrailBase, role_data, config_settings]
          - tripleo.contrail_control.firewall_rules:
              '113 contrail_control_dns':
                dport: 53
                  - 53
                  - 8092
                proto: 'udp'
              '113 contrail_control_tcp':
                dport:
                  - 179
                  - 5269
                  - 8083
                  - 8092
                  - 8093
                  - 8094
                  - 8101
      service_config_settings: {get_attr: [ContrailBase, role_data, service_config_settings]}
      contrail_env_file: &contrail_env_file
        "/etc/contrail/common_control.env"
      docker_config:
        step_2:
          get_attr: [ContrailBase, role_data, docker_config, step_2]
        step_5:
          contrail_control_nodemgr:
            image: {get_attr: [ContrailBase, role_data, contrail_nodemgr_image_name]}
            net: host
            detach: true
            user: root
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_volumes]}
                - - /var/run/docker.sock:/var/run/docker.sock
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_control_control:
            image: &contrail_control_control_image {get_attr: [DockerContrailControlControlImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            volumes:
              get_attr: [ContrailBase, role_data, contrail_base_volumes]
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_control_dns:
            image: &contrail_control_dns_image {get_attr: [DockerContrailControlDnsImageNormalize, contrail_image]}
            net: host
            privileged: false
            detach: true
            user: root
            restart: always
            pid: host
            volumes:
              list_concat:
                - get_attr: [ContrailBase, role_data, contrail_base_volumes]
                - - contrail_control_dns:/etc/contrail/dns
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
          contrail_control_named:
            image: &contrail_control_named_image {get_attr: [DockerContrailControlNamedImageNormalize, contrail_image]}
            net: host
            privileged: true
            detach: true
            user: root
            restart: always
            pid: host
            volumes_from:
              - contrail_control_dns
            environment:
              get_attr: [ContrailBase, role_data, contrail_base_env]
            env_file:
              list_concat:
                - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                - - *contrail_env_file
      host_prep_tasks:
        list_concat:
          - {get_attr: [ContrailBase, role_data, contrail_host_prep_tasks_base]}
          - - name: register contrail control env file
              stat:
                path: *contrail_env_file
              register: p
            - name: create contrail control env file
              copy:
                dest: *contrail_env_file
                content: ""
              when: not p.stat.exists
            - name: write remaining contrail control config env cars
              lineinfile:
                dest: *contrail_env_file
                state: present
                line: "{{ item }}"
              with_items:
                - NODE_TYPE=control

      metadata_settings:
        get_attr: [ContrailBase, role_data, metadata_settings]

      fast_forward_upgrade_tasks:
        - name: Stop contrail control services
          service: name={{ item }} state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
          with_items:
            - supervisor-control

      fast_forward_post_upgrade_tasks:
        get_attr: [ContrailBase, role_data, fast_forward_post_upgrade_tasks_common]

      upgrade_tasks:
        get_attr: [ContrailBase, role_data, upgrade_tasks_common]
