heat_template_version: rocky

description: >
  Contrail redis common service

parameters:
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  ContrailRegistry:
    default: 'opencontrailnightly'
    description: Contrail Registry
    type: string
  ContrailImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string
  DockerContrailRedisImageName:
    description: image
    type: string
    default: "contrail-external-redis"
  ContrailRedisPort:
    default: 6379
    description: Contrail Redis port
    type: number
  ContrailSslEnabled:
    description:  Flag to identify is SSL should be used in internal Contrail
                  services communications (sandesh, introspect, xmpp, redis ..).
    type: boolean
    default: false
  DockerContrailStunnelImageName:
    description: image
    type: string
    default: "contrail-external-stunnel"
  env_file_name:
    type: string
    default: ""
  contrail_stunnel_support:
    type: boolean
    default: false

conditions:
  env_file_unset: {equals : [{get_param: env_file_name}, '']}
  contrail_tls_enabled: {equals: [{get_param: ContrailSslEnabled}, true]}
  contrail_stunnel_support_enabled: {equals: [{get_param: contrail_stunnel_support}, true]}
  is_not_5_0:
    not:
      yaql:
        expression: $.data.split(":")[-1].matches("5\.0")
        data: {get_param: ContrailImageTag}
  contrail_redis_ssl_enabled:
    and:
      - is_not_5_0
      - contrail_tls_enabled
      - contrail_stunnel_support_enabled

resources:
  DockerContrailRedisImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailRedisImageName}

  DockerContrailStunnelImageNormalize:
    type: ../../../tools/contrail/contrail-image-normalize.yaml
    properties:
      GenericImageName: {get_param: DockerContrailStunnelImageName}

  ContrailBase:
    type: contrail-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Contrail Redis common part.
    value:
      contrail_redis_image_name: &contrail_redis_image_name {get_attr: [DockerContrailRedisImageNormalize, contrail_image]}
      contrail_stunnel_image_name: &contrail_stunnel_image_name {get_attr: [DockerContrailStunnelImageNormalize, contrail_image]}
      contrail_redis_ports:
        - {get_param: ContrailRedisPort}
      docker_config:
        step_4:
          map_merge:
            - contrail_redis:
                map_merge:
                  - image: *contrail_redis_image_name
                    net: host
                    privileged: false
                    detach: true
                    user: root
                    restart: always
                    volumes:
                      get_attr: [ContrailBase, role_data, contrail_base_volumes]
                    environment:
                      get_attr: [ContrailBase, role_data, contrail_base_env]
                  - if:
                    - env_file_unset
                    - env_file:
                        get_attr: [ContrailBase, role_data, contrail_base_env_file]
                    - env_file:
                        list_concat:
                          - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                          - - {get_param: env_file_name}
            - if:
              - contrail_redis_ssl_enabled
              - contrail_stunnel:
                  map_merge:
                    - image: *contrail_stunnel_image_name
                      net: host
                      privileged: false
                      detach: true
                      user: root
                      restart: always
                      volumes:
                        get_attr: [ContrailBase, role_data, contrail_base_volumes]
                      environment:
                        get_attr: [ContrailBase, role_data, contrail_base_env]
                    - if:
                      - env_file_unset
                      - env_file:
                          get_attr: [ContrailBase, role_data, contrail_base_env_file]
                      - env_file:
                          list_concat:
                            - {get_attr: [ContrailBase, role_data, contrail_base_env_file]}
                            - - {get_param: env_file_name}
              - null
