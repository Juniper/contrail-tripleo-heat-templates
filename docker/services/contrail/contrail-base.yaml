heat_template_version: queens

description: >
  Base parameters for all Contrail Services.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  AdminPassword:
    description: The password for the keystone admin account, used for monitoring, querying neutron etc.
    type: string
    hidden: true
  AdminTenantName:
    description: Keystone admin tenant name
    type: string
    default: 'admin'
  AdminUser:
    description: Keystone admin user name
    type: string
    default: 'admin'
  KeystoneProjectDomainName:
    type: string
    default: 'Default'
    description: Keystone Project Domain Name
  KeystoneRegion:
    type: string
    default: 'regionOne'
    description: Keystone region for endpoint
  KeystoneUserDomainName:
    type: string
    default: 'Default'
    description: Keystone User Domain Name
  AAAMode:
    description: AAAmode can be no-auth, cloud-admin or rbac
    type: string
    default: 'cloud-admin'
  ContrailAnalyticsVIP:
    default: ''
    description: Contrail Analytics Api Virtual IP address
    type: string
  ContrailConfigVIP:
    default: ''
    description: Contrail Config Virtual IP address
    type: string
  ContrailWebuiVIP:
    default: ''
    description: Contrail Webui Virtual IP address
    type: string
  ContrailRegistry:
    default: 'opencontrailnightly'
    description: Contrail Registry
    type: string
  ContrailSettings:
    default: {}
    description: Contrail Service settings
    type: json
  ContrailImageTag:
    default: 'latest'
    description: Contrail container image tag
    type: string
  DockerContrailNodemgrImageName:
    description: image
    type: string
    default: "contrail-nodemgr"
  SSLCertificate:
    default: ''
    description: >
      The content of the SSL certificate (without Key) in PEM format.
    type: string
  PublicSSLCertificateAutogenerated:
    default: false
    description: >
      Whether the public SSL certificate was autogenerated or not.
    type: boolean
  DeployedSSLCertificatePath:
    default: '/etc/pki/tls/private/overcloud_endpoint.pem'
    description: >
        The filepath of the certificate as it will be stored in the controller.
    type: string
  EnableInternalTLS:
    type: boolean
    default: false
  ContrailSslEnabled:
    description:  Flag to identify is SSL should be used in internal Contrail
                  services communications (sandesh, introspect, xmpp, ..).
    type: boolean
    default: false
  ContrailSslInsecure:
    description:  Flag to identify strict cert validation (sandesh, introspect, xmpp, ..).
    type: boolean
    default: false
  ContrailServiceCertFile:
    description: Path to the node's public certificate
    type: string
    default: ''
  ContrailServiceKeyFile:
    description: Path to server's/node's private key
    type: string
    default: ''
  ContrailCaCertFile:
    default: ''
    description: Path to CA certificate
    type: string
  ContrailCaKeyFile:
    default: ''
    description: Path to CA private key
    type: string

conditions:
  contrail_config_vip_unset: {equals : [{get_param: ContrailConfigVIP}, '']}
  contrail_analytics_vip_unset: {equals : [{get_param: ContrailAnalyticsVIP}, '']}
  contrail_webui_vip_unset: {equals : [{get_param: ContrailWebuiVIP}, '']}
  public_tls_enabled:
    or:
      - not: {equals: [{get_param: SSLCertificate}, '']}
      - {equals: [{get_param: PublicSSLCertificateAutogenerated}, true]}
  internal_tls_enabled: {equals: [{get_param: EnableInternalTLS}, true]}
  contrail_tls_enabled:
    not:
      or:
        - {equals: [{get_param: ContrailSslEnabled}, false]}
        - {equals: [{get_param: ContrailServiceCertFile}, '']}
  contrail_tls_insecure: {equals: [{get_param: ContrailSslInsecure}, true]}

resources:
  ContainersCommon:
    type: ../containers-common.yaml

outputs:
  role_data:
    description: Shared role data for the Contrail services.
    value:
      service_name: contrail_base
      contrail_registry: {get_param: ContrailRegistry}
      contrail_imagetag: {get_param: ContrailImageTag}
      contrail_nodemgr_image_name:
        list_join:
          - ''
          - - {get_param: ContrailRegistry}
            - '/'
            - {get_param: DockerContrailNodemgrImageName}
            - ':'
            - {get_param: ContrailImageTag}
      config_settings:
        map_merge:
        - contrail::admin_password: {get_param: AdminPassword}
          contrail::admin_tenant_name: {get_param: AdminTenantName}
          contrail::admin_user: {get_param: AdminUser}
          # ==
          # for puppets: neutron_plugin.pp and heat.pp
          # todo: remove admin_token after puppet update
          contrail::admin_token: ''
          contrail::auth_host: {get_param: [EndpointMap, KeystoneAdmin, host] }
          contrail::auth_port: {get_param: [EndpointMap, KeystoneAdmin, port] }
          contrail::auth_protocol: {get_param: [EndpointMap, KeystoneAdmin, protocol] }
          contrail::api_port: '8082'
          contrail::keystone_region: {get_param: KeystoneRegion}
          contrail::keystone_project_domain_name: {get_param: KeystoneProjectDomainName}
          contrail::keystone_user_domain_name: {get_param: KeystoneUserDomainName}
          contrail::aaa_mode: {get_param: AAAMode}
          contrail_internal_api_ssl: {get_param: EnableInternalTLS}
          # ==
          contrail_settings: {get_param: ContrailSettings}
        - if:
          - contrail_config_vip_unset
          - contrail_config_vip: "%{hiera('internal_api_virtual_ip')}"
          - contrail_config_vip: {get_param: ContrailConfigVIP}
        - if:
          - contrail_webui_vip_unset
          - contrail_webui_vip: "%{hiera('internal_api_virtual_ip')}"
          - contrail_webui_vip: {get_param: ContrailWebuiVIP}
        - if:
          - contrail_analytics_vip_unset
          - contrail_analytics_vip: "%{hiera('internal_api_virtual_ip')}"
          - contrail_analytics_vip: {get_param: ContrailAnalyticsVIP}
      haproxy_config_settings_member_options: &haproxy_config_settings_member_options
          - 'check'
          - 'inter 2000'
          - 'rise 2'
          - 'fall 5'
      haproxy_config_settings_listen_options: &haproxy_config_settings_listen_options
        balance:
          - 'source'
        hash-type:
          - 'consistent'
      haproxy_config_settings: &haproxy_config_settings
        public_virtual_ip: "%{hiera('public_virtual_ip')}"
        mode: 'http'
        listen_options:
          map_merge:
            - *haproxy_config_settings_listen_options
            - option:
                - 'forwardfor'
              http-request:
                - 'set-header X-Forwarded-Proto https if { ssl_fc }'
                - 'set-header X-Forwarded-Proto http if !{ ssl_fc }'
        # TODO: use this section as RedHat port the commit from upstream quuens:
        #   commit 47ec9ce49b0a9e26701f63c9841ab2f982f7af32
        #   Author: Andrew Austin <aaustin@redhat.com>
        #   Date:   Thu Jun 21 22:08:51 2018 +0000
        #    Add mechanism for cookie-based sessions in endpoints.
        # --
        # sticky_sessions: true
        # session_cookie: 'SERVERID'
        # listen_options:
        #   balance:
        #     - 'roundrobin'
        #   option:
        #     - 'forwardfor'
        #   http-request:
        #     - 'set-header X-Forwarded-Proto https if { ssl_fc }'
        #     - 'set-header X-Forwarded-Proto http if !{ ssl_fc }'
        member_options: *haproxy_config_settings_member_options
      haproxy_config_settings_tls:
        if:
          - public_tls_enabled
          - map_merge:
              - *haproxy_config_settings
              - member_options:
                  - 'ssl verify none'
          - public_virtual_ip: "%{hiera('public_virtual_ip')}"
            mode: 'tcp'
            listen_options: *haproxy_config_settings_listen_options
            member_options: *haproxy_config_settings_member_options
      contrail_base_volumes: &contrail_base_volumes
        list_concat:
          - {get_attr: [ContainersCommon, volumes]}
          - - /etc/contrail/ssl:/etc/contrail/ssl
            - /var/crashes:/var/crashes
            - /var/log/containers/contrail:/var/log/contrail
      contrail_general_base_env: &contrail_general_base_env
        - 'CLOUD_ORCHESTRATOR=openstack'
        - 'OPENSTACK_VERSION=queens'
        - list_join:
          - '='
          - - 'AAA_MODE'
            - {get_param: AAAMode}
      contrail_auth_base_env: &contrail_auth_base_env
        - 'AUTH_MODE=keystone'
        - 'KEYSTONE_AUTH_URL_VERSION=/v3'
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_ADMIN_PASSWORD'
            - {get_param: AdminPassword}
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_ADMIN_USER'
            - {get_param: AdminUser}
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_ADMIN_TENANT'
            - {get_param: AdminTenantName}
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_REGION_NAME'
            - {get_param: KeystoneRegion}
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_PROJECT_DOMAIN_NAME'
            - {get_param: KeystoneProjectDomainName}
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_USER_DOMAIN_NAME'
            - {get_param: KeystoneUserDomainName}
      contrail_auth_admin_env: &contrail_auth_admin_env
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_HOST'
            - {get_param: [EndpointMap, KeystoneAdmin, host] }
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_ADMIN_PORT'
            - {get_param: [EndpointMap, KeystoneAdmin, port] }
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_PROTO'
            - {get_param: [EndpointMap, KeystoneAdmin, protocol] }
      contrail_auth_internal_env: &contrail_auth_internal_env
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_HOST'
            - {get_param: [EndpointMap, KeystoneInternal, host] }
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_ADMIN_PORT'
            - {get_param: [EndpointMap, KeystoneInternal, port] }
        - list_join:
          - '='
          - - 'KEYSTONE_AUTH_PROTO'
            - {get_param: [EndpointMap, KeystoneInternal, protocol] }
      contrail_tls_env: &contrail_tls_env
        if:
          - contrail_tls_enabled
          - - "XMPP_SSL_ENABLE=True"
            - "SANDESH_SSL_ENABLE=True"
            - "INTROSPECT_SSL_ENABLE=True"
            - if:
              - contrail_tls_insecure
              - 'INTROSPECT_SSL_INSECURE=True'
              - 'INTROSPECT_SSL_INSECURE=False'
            - list_join:
                - '='
                - - 'SERVER_CERTFILE'
                  - {get_param: ContrailServiceCertFile}
            - list_join:
                - '='
                - - 'SERVER_KEYFILE'
                  - {get_param: ContrailServiceKeyFile}
            - list_join:
                - '='
                - - 'SERVER_CA_CERTFILE'
                  - {get_param: ContrailCaCertFile}
            - list_join:
                - '='
                - - 'SERVER_CA_KEYFILE'
                  - {get_param: ContrailCaKeyFile}
          - []
      contrail_auth_tls_env: &contrail_auth_tls_env
        if:
          - internal_tls_enabled
          - - 'KEYSTONE_AUTH_INSECURE=True'
            - list_join:
                - '='
                - - 'KEYSTONE_AUTH_CERTFILE'
                  - {get_param: ContrailServiceCertFile}
            - list_join:
                - '='
                - - 'KEYSTONE_AUTH_KEYFILE'
                  - {get_param: ContrailServiceKeyFile}
          - []
      contrail_base_env: &contrail_base_env
        list_concat:
          - *contrail_general_base_env
          - *contrail_auth_base_env
          - *contrail_auth_admin_env
          - *contrail_tls_env
          - *contrail_auth_tls_env
      contrail_base_auth_internal_env: &contrail_base_auth_internal_env
        list_concat:
          - *contrail_general_base_env
          - *contrail_auth_base_env
          - *contrail_auth_internal_env
          - *contrail_tls_env
          - *contrail_auth_tls_env
      docker_config:
        step_2: {}
